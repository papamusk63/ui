{"version":3,"sources":["contexts/authContext.js","utils/helper.js","layouts/User/Login.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","components/Dropdown/Dropdown.js","layouts/Admin/UserManage.js","routes.js","api/Api.js","layouts/Admin/LinkManage.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","layouts/Auth/PrivateRoute.js","layouts/User/SignUp.js","layouts/User/Verify.js","layouts/User/ForgotPassword.js","layouts/User/PasswordResetConfirm.js","components/WatchListEditColumnWidget/components/modal/dropDown/index.js","components/WatchListEditColumnWidget/components/modal/Widget.js","components/WatchListEditColumnWidget/WatchListEditColumnWidget.js","components/WatchListEditColumnWidget/components/modal/nodes.js","components/WatchListItem/WatchListItem.js","components/WatchList.js","layouts/User/MarketWatch.js","contexts/DBDashboardContext.js","components/DBManagement/Collection.js","components/Spinner.js","components/DBManagement/CollectionList.js","components/DBManagement/DatabaseActions.js","components/DBManagement/Pathway.js","components/DBManagement/ControlBar.js","components/DBManagement/Database.js","components/DBManagement/DatabaseList.js","components/DBManagement/Content.js","components/DBManagement/Sidebar.js","components/DBManagement/Dashboard.js","components/DBManagement/DashboardWrapper.js","index.js","assets/img/anime3.png"],"names":["authContext","createContext","authUser","isAuthenticated","localStorage","getItem","signin","email","password","formData","username","fetch","process","method","body","JSON","stringify","then","response","json","res","user_id","Error","success","catch","err","error","signup","password1","password2","pathname","first_name","last_name","signup_path","verify","userId","code","num","signout","removeItem","useAuth","useContext","ProvideAuth","children","auth","a","useProvideAuth","Provider","value","validateEmail","test","String","toLowerCase","Login","history","useHistory","useState","setError","isLoading","setIsLoading","message","setMessage","setEmail","setPassword","useEffect","listener","event","preventDefault","login","document","addEventListener","removeEventListener","length","alert","historyState","push","state","className","type","placeholder","onChange","e","target","handleEmailChange","required","handlePasswordChange","id","htmlFor","onClick","role","href","AdminNavbar","ps","React","collapseOpen","modalSearch","setmodalSearch","color","setcolor","window","updateColor","innerWidth","toggleModalSearch","classNames","expand","fluid","navbar","isOpen","nav","caret","alt","src","require","default","right","tag","divider","modalClassName","toggle","backgroundColors","BackgroundColorContext","changeColor","Dropdown","props","items","title","icon","instance","handleClick","isActive","subInstance","setOpen","map","item","label","Sidebar","sidebarRef","useRef","parse","user","userRole","setUserRole","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","handleInstanceChange","locationState","initInstance","isAdminPage","routes","selectedInstance","handleSidebarChange","Consumer","data","ref","prop","key","name","is_admin","includes","defaultProps","rtlActive","adminRoutes","createSignUpLink","Axios","create","baseURL","headers","roles","requestOptions","link","getActiveLinks","sendSignUpLink","forgotPassword","url","passwordConfirmReset","getUserList","updateUserRole","deleteUser","getStockModalData","getScannerAllViewData","chart_number","result","getSearchingData","apiGetDatabases","header","apiGetCollections","dbName","apiURL","URL","search","URLSearchParams","db_name","toString","apiDeleteCollection","collectionName","collection_name","apiDeleteDatabase","apiCreateBackup","apiExecuteBackup","backup_id","filename","contentType","get","console","log","blob","createObjectURL","createElement","download","click","apiStopBackup","UserManage","isRequest","setIsRequest","isShowSidebar","setShowSidebar","location","useLocation","mainPanelRef","isShowUpdateRoleModal","setIsShowUpdateRoleModal","setRoles","userlist","setUserList","selectedUserId","documentElement","sidebarOpened","setsidebarOpened","setSelectedInstance","optionsRole","classList","remove","tables","querySelectorAll","i","add","scrollTop","scrollingElement","fetchUserList","list","users","index","is_superuser","active","action","size","confirm","toggleSidebar","getBrandText","path","layout","columns","field","handleRolesChange","options","handleUpdateRoleModalClose","transformUserRole","roleValues","coma","forEach","handleUserRoleUpdate","Fragment","Modal","show","onHide","Header","closeButton","Title","Body","isMulti","Footer","variant","brandText","btn","rows","LinkManage","isShowSendModal","setIsShowSendModal","isShowCreateLinkModal","setShowCreateLinkModal","selectedLink","setSelectedLink","fetchActiveLinks","links","filteredLinks","filter","expired","linklist","showSendEmailModal","setLinkList","handleCreateLinkModalClose","handleCreateLinkClick","handleLinkCreate","handleSendEmailModalClose","handleLinkToEmailSend","themes","dark","colors","white","red","darkBlue","lightBlue","textColor","borderColor","actionButtonColor","actionButtonBg","tableTextColor","light","useThemeColors","ThemeContext","theme","changeTheme","ThemeContextWrapper","setTheme","BackgroundColorWrapper","setColor","PrivateRoute","rest","render","to","from","SignUp","setUserName","confirmPassword","setConfirmPassword","handleUserNameChange","handleConfirmPasswordChange","Verify","setCode","userInfo","user_email","setItem","token","handleCodeChange","class","ForgotPassword","handleForgotPassword","PasswordResetConfirm","setPassword1","setPassword2","delay","ms","Promise","setTimeout","handlePasswordResetConfirm","content","handlePassword1Change","handlePassword2Change","CustomDropDown","nodes","inputvalue","setOptions","selectedNode","nodeOptions","node","child","Widget","checkedAvailableItem","expandedAvailableItem","nodesFilteredAvailableItem","nodesAvailableItem","restoreAvailableItems","restoreCurrentItems","currentNodes","checkedCurrrentItem","expandedCurrrentItem","onCheckAvailableItem","bind","onExpandAvailableItem","onFilterChangeAvailableItem","onCheckCurrentItem","onExpandCurrentItem","onAddItems","onRemoveItems","onLoadDefaults","onMoveUp","onMoveDown","onRestoreClicked","onOkClicked","onCancelClicked","onGetAvailabelNodes","onLoadTotalNodes","isExistItem","currentItems","cloneDeep","this","totalNodes","availableNodes","totalNode","parentFlag","totalCurrentNode","totalCurrnetChildrens","totalCurrentChild","totalChild","childFlag","availableNode","setState","checkedCurrentItem","expandedCurrentItem","filteredNodes","childNode","checkedItems","availableItems","newCurrentNodes","availableItem","currentChildItems","childItem","originCurrentNodes","totalNewCurrentNodes","newCurrentNode","exist","currentNode","newChildItem","parentExist","totalCurrentNodes","originNode","newNode","filteredNode","isExist","pushItem","availableChildItems","defaultNodes","direction","Array","isArray","moveEnable","sort","parentSuffix","split","uniqParentSuffix","Set","parentValue","nodeIndex","status","parentIndex","childIndex","temp","moveItem","handleCurrentNodesChanged","handleVisible","checked","expanded","onCheck","onExpand","Component","WatchListEditColumnWidget","setTotalNodes","selectedColumns","setCurrentNodes","childNodes","getModalData","avgBars","avg_bars","avgLosingTrade","avg_losing_trade","avgTrade","avg_trade","buyHold","buy_hold","total","defaults","commission_paid","gross_loss","gross_profit","largest","margin_calls","max","net","number","open","percent_profitable","profit_factor","ratio_avg_win","sharpe_ratio","take_at","comment","setColumns","visibleStatus","handleModalClose","defaultFields","WatchListItem","isLoadedWatchListOptions","setIsLoadedWatchListOptions","setSelectedColumns","isOpenedEditColumnWidget","setIsOpenedEditColumnWidget","isUpdatedCols","setIsUpdatedCols","columnItems","setColumnItems","setTotalHeader","searchKey","setSearchKey","csvData","setCsvData","loadTableData","NaN","cols","undefined","headerData","filterTableData","tableHeader","hearder_columns","bodyData","row","setDatatable","loadSearchingData","keyString","searchingBody","filterData","filterItems","itemTree","datatable","table_header","width","attributes","getScannerAvailableFields","temps","colObjects","Object","keys","col","hover","entriesOptions","entries","pagesAmount","fullPagination","WatchList","chartColumn","defaultViewFields","allViewDataDefault","allViewData","setAllViewData","loadLayout","validViewDatas","d","fields","chartNumbers","allViewDataFiltered","newAllViewData","disableScroll","on","off","MarketWatch","DBDashboardContext","DBDashboardUpdateContext","DBDashboardLoadingContext","DBDatabaseExportContext","DBDatabaseDeleteContext","DBBackupContext","useBackupStatus","useDBDashboard","useDBDashboardLoading","useActiveDatabase","hash","substring","useExportDatabase","useDeleteDatabase","DBDashboardProvider","setLoading","databases","setDatabases","isBackupRunning","setBackupRunning","currentBackupId","setCurrentBackupId","databaseName","updatedDatabases","filteredDatabase","DBCollection","dbname","buttonStyle","backgroundColor","textStyle","rowStyle","handleBackup","style","disabled","onDeleteClick","Spinner","DBCollectionList","collections","setCollections","updatedCollections","filteredCollection","deleteCollection","DBDatabaseActions","handleDelete","DBPathway","DBControlBar","DBDatabase","onSaveClick","DBDatabaseList","DBContent","currentDb","overflowY","DBSidebar","activeDatabase","MDBContainer","MDBRow","MDBCol","DBDashboard","stopBackup","left","top","bottom","background","zIndex","DashboardWrapper","pushState","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f2d96e84.chunk.js","sourcesContent":["import React, { createContext, useContext } from \"react\";\r\nconst authContext = createContext();\r\n\r\nconst authUser = {\r\n  isAuthenticated: localStorage.getItem(\"auth-token\") ? true : false,\r\n  async signin(email, password) {\r\n    let formData = {\r\n      username: email,\r\n      password: password\r\n    }\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signin/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.user_id) {\r\n          throw new Error('SignIn failed');\r\n        }\r\n        return {\r\n          success: true,\r\n          user_id: res.user_id\r\n        }\r\n      })\r\n      .catch(err => {\r\n        return {\r\n          success: false,\r\n          error: \"User Name or Password is wrong\"\r\n        }\r\n      })\r\n  },\r\n\r\n  async signup(username, email, password1, password2, pathname) {\r\n    let formData = {\r\n      username: username,\r\n      email: email,\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      password1: password1,\r\n      password2: password2,\r\n      signup_path: process.env.REACT_APP_BACKEND_URL + pathname\r\n    }\r\n    \r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signup/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          return {\r\n            success: true\r\n          }\r\n        } else {\r\n          throw new Error(res.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        return {\r\n          success: false,\r\n          error: 'Sign up failed'\r\n        }\r\n      })\r\n  },\r\n  async verify(userId, code) {\r\n    let formData = {\r\n      user_id: userId,\r\n      num: code\r\n    }\r\n    const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/verify/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (res.error) {\r\n          throw new Error(res.error);\r\n        }\r\n        return res\r\n      })\r\n      .catch(err => {\r\n        return { \r\n          verify: false,\r\n          error: 'verify failed'\r\n        }\r\n      })\r\n    authUser.isAuthenticated = true;\r\n    return res\r\n  },\r\n  signout() {\r\n    authUser.isAuthenticated = false;\r\n    localStorage.removeItem(\"auth-token\")\r\n    localStorage.removeItem(\"user-info\")\r\n  },\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}  \r\n\r\nexport default function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n  \r\nfunction useProvideAuth() {\r\n  const verify = async ( userId, num ) => {\r\n    authUser.signin(userId, num)\r\n  };\r\n\r\n  const signin = async ( email, password ) => {\r\n    authUser.signin(email, password)\r\n  };\r\n\r\n  const signout = () => {\r\n    authUser.signout()\r\n  };\r\n  \r\n  return {\r\n    authUser,\r\n    verify,\r\n    signin,\r\n    signout,\r\n  };\r\n}","export function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n// export function validateEmail(email) {\r\n//  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n//   {\r\n//     return (true)\r\n//   }\r\n//     alert(\"You have entered an invalid email address!\")\r\n//     return (false)\r\n// }\r\n\r\nexport function currentDateString() {\r\n    const date = new Date();\r\n    let month = date.getMonth() + 1\r\n    let day = date.getDate()\r\n    if (date.getMonth() + 1 < 10) {\r\n        month = '0' + month\r\n    }\r\n    if (date.getDate() < 10) {\r\n        day = '0' + day\r\n    }\r\n\r\n    return `${date.getFullYear()}-${month}-${day}`;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext'\r\nimport { validateEmail } from 'utils/helper'\r\n\r\nconst Login = () => {\r\n    let auth = useAuth();\r\n    let history = useHistory();\r\n    const [error, setError] = useState(-1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                login();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, []);\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    \r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    \r\n    const login = async () => {\r\n        if (!email.length || !password.length) {\r\n            setError(1)\r\n            setMessage('Email or password is wrong')\r\n            return\r\n        }\r\n        \r\n        if (!validateEmail(email)){\r\n            alert('Invalid email')\r\n            return\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        const res = await auth.authUser.signin(email, password)\r\n        setIsLoading(false)\r\n        if (res.success) {\r\n            const historyState = {\r\n                userId: res.user_id\r\n            }\r\n            history.push({\r\n                pathname: '/verify',\r\n                state: historyState\r\n            })\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Log In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>User Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter user email\"\r\n                        value={email}\r\n                        onChange={(e) => { handleEmailChange(e)}}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => { handlePasswordChange(e)}}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={login}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Sign in\r\n                </button>\r\n                \r\n                <div className=\"form-group hunter-form-signup-area\">\r\n                    <p className=\"sign-up-area text-left\">\r\n                        <a href=\"/signup\">Sign Up?</a>\r\n                    </p>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Forgot <a href=\"/forgot_password\">password?</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {error !== -1 && \r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext';\r\n\r\nfunction AdminNavbar() {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  \r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n      <div className=\"logo-title\">\r\n        <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n          Search Engine\r\n        </a>\r\n      </div>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  {/* <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                  </NavLink> */}\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nimport { Dropdown } from 'components/Dropdown/Dropdown'\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const history = useHistory();\r\n  const sidebarRef = React.useRef(null);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')))\r\n  const [userRole, setUserRole] = useState('');\r\n  // verifies if routeName is the one active (in browser input)\r\n  useEffect(() => {\r\n    setUserRole(user?.role)\r\n  }, [])\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  \r\n  const handleClick = (instance, pathname) => {\r\n    handleInstanceChange(instance)\r\n    const locationState = {\r\n      initInstance: instance\r\n    }\r\n    if (pathname) {\r\n      history.push({\r\n        pathname: pathname,\r\n        state: instance === 'stress_test'\r\n        || instance === 'optimization'\r\n        || instance === 'live_trading'\r\n        ?  locationState: null\r\n      })\r\n    }\r\n  }\r\n\r\n  const { isAdminPage, routes, selectedInstance, handleSidebarChange, handleInstanceChange, subInstance } = props;\r\n  \r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <div className=\"sidebar hunter-sidebar\" data={color}>\r\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n            <div className=\"show-sidebar-button-area\">\r\n              <div className=\"show-sidebar-icon\">\r\n                <i className=\"tim-icons icon-align-left-2\" onClick={handleSidebarChange}/>\r\n              </div>\r\n            </div>\r\n            {isAdminPage ? (\r\n              <Nav>\r\n                {routes.map((prop, key) => {\r\n                  return (\r\n                    <li\r\n                      className={\r\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\r\n                      }\r\n                      key={key}\r\n                      onClick={() => {\r\n                        handleInstanceChange(prop.instance)\r\n                        if (prop.pathname) {\r\n                          history.push({\r\n                            pathname: prop.pathname\r\n                          })\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"nav-link\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </Nav>  \r\n            ) : (\r\n              <Nav>\r\n                {routes.map((prop, key) => {\r\n                  if (!user.is_admin && !userRole.includes(prop.instance)) {\r\n                    return (<></>)\r\n                  }\r\n                  return (\r\n                    <li\r\n                      className={\r\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\r\n                      }\r\n                      key={key}\r\n                    >\r\n                      {prop.items ? (\r\n                        <div\r\n                          className=\"nav-link\"\r\n                        >\r\n                          <Dropdown \r\n                            title={prop.name}\r\n                            icon={prop.icon}\r\n                            items={prop.items}\r\n                            instance={prop.instance}\r\n                            subInstance={subInstance}\r\n                            handleClick={handleClick}\r\n                            isActive={prop.instance === selectedInstance}\r\n                            key={`${prop.instance}`}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <div\r\n                          className=\"nav-link\"\r\n                          onClick={() => {\r\n                            handleInstanceChange(prop.instance)\r\n                            const locationState = {\r\n                              initInstance: prop.instance\r\n                            }\r\n                            if (prop.pathname) {\r\n                              history.push({\r\n                                pathname: prop.pathname,\r\n                                state: prop.instance === 'stress_test'\r\n                                || prop.instance === 'optimization'\r\n                                || prop.instance === 'live_trading'\r\n                                ?  locationState: null\r\n                              })\r\n                            }\r\n                          }}\r\n                        >\r\n                          <i className={prop.icon} />\r\n                          <p className=\"hunter-ml-6\" >{prop.name}</p>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    </li>\r\n                  );\r\n                })}\r\n              </Nav>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createContext } from \"react\";\r\n\r\nexport const backgroundColors = {\r\n  primary: \"primary\",\r\n  blue: \"blue\",\r\n  green: \"green\",\r\n};\r\n\r\nexport const BackgroundColorContext = createContext({\r\n  color: backgroundColors.blue,\r\n  changeColor: (color) => {},\r\n});\r\n","import { useState } from 'react'\r\n\r\nexport const Dropdown = (props) => {\r\n  const { items, title, icon, instance, handleClick, isActive, subInstance } = props;\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggleDropdown = () => setOpen(!isOpen);\r\n  \r\n  return (\r\n    <div className='hunter-dropdown'>\r\n      <div className='hunter-dropdown-header' onClick={toggleDropdown}>\r\n        <i className={icon} />\r\n        {title}\r\n        <i className={`fa fa-chevron-right hunter-dropdown-icon icon ${isOpen && \"open\"}`}></i>\r\n      </div>\r\n      <div className={`hunter-dropdown-body ${isOpen && 'open'}`}>\r\n        {items.map(item => (\r\n          <div className={`hunter-dropdown-item ${isActive && item.instance === subInstance && 'hunter-selected'}`}\r\n            onClick={e => {\r\n              handleClick(instance, item.pathname)\r\n            }}\r\n            id={item.id}\r\n            key={`${instance}-${item.id}`}\r\n          >\r\n            {item.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { adminRoutes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\r\nimport { getUserList, updateUserRole, deleteUser } from 'api/Api';\r\n\r\nvar ps;\r\n\r\nfunction UserManage() {\r\n  const history = useHistory();\r\n  const [isRequest, setIsRequest] = useState(true)\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [isShowUpdateRoleModal, setIsShowUpdateRoleModal] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [userlist, setUserList] = useState([])\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  const [selectedInstance, setSelectedInstance] = React.useState('usermanage');\r\n  const optionsRole = [\r\n    { value: 'forward_test', label: 'Forward Test' },\r\n    // { value: 'stress_test', label: 'Stress Test' },\r\n    // { value: 'optimization', label: 'Optimization' },\r\n    { value: 'live_trading', label: 'Live Trade' },\r\n    { value: 'search_engine', label: 'Market' },\r\n    { value: 'scanner', label: 'Scanner' },\r\n    { value: 'trade_data', label: 'Trade Data' },\r\n    { value: 'hybrid_view', label: 'Hybrid View' },\r\n    { value: 'financial_data', label: 'Financial Data' },\r\n    { value: 'floats', label: 'Floats' },\r\n  ]\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n  useEffect(() => {\r\n    if (!user.is_admin) {\r\n      history.push('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserList = async () => {\r\n      const list = await getUserList();\r\n      const users = list.map((user, index) => {\r\n        return {\r\n          id: index,\r\n          username: user.username,\r\n          email: user.email,\r\n          role: user.is_superuser ? 'Super User' : user.role,\r\n          active: 'active',\r\n          action: <div className=\"hunter-user-manage-button-area\">\r\n            {/* <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              setRoles([]);\r\n              setSelectedUserId(user.id);\r\n              showUpdateUserRoleModal();\r\n            }}\r\n            >Update Role</MDBBtn> */}\r\n            <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            async () => {\r\n              if (window.confirm(\"Do you really want to delete this user?\")) {\r\n                const res = await deleteUser(user.id)\r\n                setIsRequest(true);\r\n                alert(res.message)\r\n              }\r\n            }}\r\n          >Delete User</MDBBtn>\r\n          </div>\r\n        }\r\n      })\r\n       setUserList(users)\r\n    };\r\n    if (isRequest) {\r\n      fetchUserList();\r\n      setIsRequest(false);\r\n    }\r\n  }, [isRequest])\r\n\r\n  const showUpdateUserRoleModal = () => {\r\n    setIsShowUpdateRoleModal(true);\r\n  }\r\n\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < adminRoutes.length; i++) {\r\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\r\n        return adminRoutes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  const columns= [\r\n    {\r\n      label: '#',\r\n      field: 'id',\r\n    },\r\n    {\r\n      label: 'name',\r\n      field: 'username',\r\n    },\r\n    {\r\n      label: 'email',\r\n      field: 'email',\r\n    },\r\n    {\r\n      label: 'Role',\r\n      field: 'role',\r\n    },\r\n    {\r\n      label: 'Active',\r\n      field: 'active',\r\n    },\r\n    {\r\n      action: 'Action',\r\n      field: 'action',\r\n    }\r\n  ];\r\n\r\n  const handleRolesChange = (options) => {\r\n    setRoles(options);\r\n  }\r\n\r\n  const handleUpdateRoleModalClose = () => {\r\n    setIsShowUpdateRoleModal(false)\r\n  }\r\n\r\n  const transformUserRole = (roles) => {\r\n    let roleValues = ''\r\n    let coma = ''\r\n    roles.forEach(role => {\r\n      roleValues = roleValues + coma + role.value\r\n      coma = ','\r\n    })\r\n    return roleValues;\r\n  }\r\n\r\n  const handleUserRoleUpdate = async () => {\r\n    setIsLoading(true)\r\n    const res = await updateUserRole(selectedUserId, transformUserRole(roles));\r\n    setIsLoading(false)\r\n    if ( res.success ) {\r\n      setIsRequest(true);\r\n      setError(0)\r\n      setMessage(res.message)\r\n      return;\r\n    }\r\n    setError(1)\r\n    setMessage(res.message)\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n    setIsShowUpdateRoleModal(false)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={true}\r\n              routes={adminRoutes}\r\n              handleSidebarChange={handleSidebarChange}\r\n              selectedInstance={selectedInstance}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n          )}\r\n          <Modal show={isShowUpdateRoleModal} className=\"hunter-modal\" onHide={handleUpdateRoleModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Update User Role</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"select-multi-option\">\r\n                <Select\r\n                  name=\"filters\"\r\n                  placeholder=\"Roles\"\r\n                  value={roles}\r\n                  onChange={handleRolesChange}\r\n                  options={optionsRole}\r\n                  isMulti={true}\r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button variant=\"primary\" onClick={handleUserRoleUpdate}>\r\n                {isLoading && (\r\n                  <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                )}\r\n                Update Role\r\n              </Button>\r\n            </Modal.Footer>\r\n            {error !== -1 &&\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                <div className=\"alert-container\">\r\n                  <div className=\"alert-content\">\r\n                    {message}\r\n                  </div>\r\n                  <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                </div>\r\n              </div>\r\n            }\r\n          </Modal>\r\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <div className=\"hunter-page-container\">\r\n                <div className=\"hunter-page-title\">\r\n                  <h3>User Manage</h3>\r\n                </div>\r\n                <div className=\"col-sm-8 hunter-mdb-table-container\">\r\n                  <MDBTable btn>\r\n                    <MDBTableHead columns={columns} color=\"dark\"/>\r\n                    <MDBTableBody rows={userlist} className=\"hunter-mdb-table-body\"/>\r\n                  </MDBTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default UserManage;\r\n","export var routes = [\r\n  // {\r\n  //   name: \"Admin\",\r\n  //   icon: \"tim-icons icon-app\",\r\n  //   instance: \"admin_tab\",\r\n  //   items: [\r\n  //     // {\r\n  //     //   id: 0,\r\n  //     //   label: 'Paper Bot Management',\r\n  //     //   instance: \"systemfilemanager\",\r\n  //     //   pathname: '/botmanagement'\r\n  //     // },\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'DB Management',\r\n  //       instance: \"dbmanager\",\r\n  //       pathname: '/db_management'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   name: \"Paper Trading\",\r\n  //   icon: \"tim-icons icon-chart-pie-36\",\r\n  //   instance: \"forward_test\",\r\n  //   pathname: '/'\r\n  //   // items: [\r\n  //   //   {\r\n  //   //     id: 0,\r\n  //   //     label: 'View',\r\n  //   //     instance: \"view\",\r\n  //   //     pathname: '/'\r\n  //   //   }\r\n  //   // ],\r\n  // },\r\n  // {\r\n  //   name: \"Stress test\",\r\n  //   icon: \"tim-icons icon-attach-87\",\r\n  //   instance: \"stress_test\",\r\n  //   items: [\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'View',\r\n  //       instance: \"view\",\r\n  //       pathname: '/'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   name: \"Optimization\",\r\n  //   icon: \"tim-icons icon-atom\",\r\n  //   instance: \"optimization\",\r\n  //   items: [\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'View',\r\n  //       instance: \"view\",\r\n  //       pathname: '/optimization'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   name: \"Live trading\",\r\n  //   icon: \"tim-icons icon-badge\",\r\n  //   instance: \"live_trading\",\r\n  //   pathname: '/'\r\n  //   // items: [\r\n  //   //   {\r\n  //   //     id: 0,\r\n  //   //     label: 'View',\r\n  //   //     instance: \"view\",\r\n  //   //     pathname: '/'\r\n  //   //   }\r\n  //   // ],\r\n  // },\r\n  {\r\n    name: \"Search Engine\",\r\n    icon: \"tim-icons icon-camera-18\",\r\n    instance: \"search_engine\",\r\n    pathname: '/search_engine'\r\n  },\r\n  // {\r\n  //   name: \"Data Tables\",\r\n  //   icon: \"tim-icons icon-chart-bar-32\",\r\n  //   instance: \"trade_data\",\r\n  //   items: [\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'Price Data Table',\r\n  //       instance: \"pricedatatable\",\r\n  //       pathname: '/pricedatatable'\r\n  //     },\r\n  //     {\r\n  //       id: 1,\r\n  //       label: 'Trade Data Table',\r\n  //       instance: \"tradedatatable\",\r\n  //       pathname: '/tradedatatable'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  {\r\n    name: \"Scraping\",\r\n    icon: \"tim-icons icon-video-66\",\r\n    instance: \"Scraping\",\r\n    pathname: '/search_engine'\r\n  },\r\n  // {\r\n  //   name: \"Financial Data\",\r\n  //   icon: \"tim-icons icon-coins\",\r\n  //   instance: \"financial_data\",\r\n  //   pathname: '/financial_data'\r\n  // },\r\n  // {\r\n  //   name: \"Scanner\",\r\n  //   icon: \"tim-icons icon-controller\",\r\n  //   instance: \"scanner\",\r\n  //   pathname: '/scanner'\r\n  // },\r\n  // {\r\n  //   name: \"Floats\",\r\n  //   icon: \"tim-icons icon-vector\",\r\n  //   instance: \"floats\",\r\n  //   pathname: '/floats'\r\n  // },\r\n  // {\r\n  //   name: \"News\",\r\n  //   icon: \"tim-icons icon-atom\",\r\n  //   instance: \"news_data\",\r\n  //   pathname: '/news_data'\r\n  // },\r\n]\r\n\r\nexport var adminRoutes = [\r\n  {\r\n    name: \"User Manage\",\r\n    icon: \"tim-icons icon-chart-pie-36\",\r\n    instance: \"usermanage\",\r\n    pathname: '/admin/usermanage'\r\n  },\r\n  // {\r\n  //   name: \"Link Manage\",\r\n  //   icon: \"tim-icons icon-attach-87\",\r\n  //   instance: \"linkmanage\",\r\n  //   pathname: '/admin/linkmanage'\r\n  // },\r\n]\r\n\r\n","import Axios from 'axios';\r\n\r\nconst http  = Axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nconst request = async (req) => {\r\n  const config = {\r\n    method: req.method,\r\n    url: req.path,\r\n    params: req.params,\r\n    data: req.body,\r\n    headers: req.headers,\r\n  }\r\n  try {\r\n    const response = await http.request(config);\r\n    return {\r\n      success: true,\r\n      data: response.data,\r\n    }\r\n  } catch (err) {\r\n    console.error(`request ${req.path}:`, err);\r\n    return {\r\n      success: false,\r\n      data: err,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getStrategyListReq = async () => {\r\n  const req = {\r\n    method: 'GET',\r\n    path: 'api/get_strategy_list'\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getTablesReq = async (strategy) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/tables',\r\n    body: {\r\n      strategy,\r\n    }\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataSliceReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_slice',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataExtendedSliceReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_extended_slice',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataExtendedReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_extended',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getBacktestingResultReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_backtesting_result',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const filterPriceData = async (symbol, timeFrame, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n      'time_frame': timeFrame,\r\n      'start': tradeStartDate,\r\n      'end': tradeEndDate,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_table_candles\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const candles = []\r\n      data.candles.forEach((x) => {\r\n        candles.push({\r\n          'o': x[1],\r\n          'h': x[2],\r\n          'c': x[3],\r\n          'l': x[4],\r\n          'v': x[5],\r\n          'date': x[0].replace('T', ' '),\r\n        })\r\n      })\r\n      return {\r\n        candles,\r\n        page_total: 0\r\n      }\r\n    })\r\n}\r\n\r\nexport const filterTradesData = async (macroStrategy, microStrategy, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'macroStrategy': macroStrategy,\r\n      'microStrategy': microStrategy,\r\n      'tradeStartDate': tradeStartDate,\r\n      'tradeEndDate': tradeEndDate,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_data_trades\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let trades_data = []\r\n      data.trades_data.forEach((x) => {\r\n        trades_data.push({\r\n          'symbol': x.symbol,\r\n          'strategy': `${x.macro_strategy} - ${x.micro_strategy}`,\r\n          'side': x.side,\r\n          'quantity': x.quantity,\r\n          'date': (x.date.replace('T', ' ')).replace('Z', ''),\r\n          'price': x.price\r\n        })\r\n      })\r\n      return {\r\n        trades_data,\r\n        page_total: data.page_total\r\n      }\r\n    })\r\n}\r\n\r\nexport const getAllSymbols = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'strategy': 'no_strategy'\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let temp_data = []\r\n      data.tables.map((x) => {\r\n        temp_data.push({\r\n          value: x,\r\n          label: x\r\n        });\r\n        return null\r\n      })\r\n      return temp_data\r\n    })\r\n}\r\n\r\nexport const createSignUpLink = async (roles) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      roles: roles,\r\n      link: process.env.REACT_APP_BACKEND_URL + '/signup/'\r\n    })\r\n  };\r\n  let res = []\r\n  await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(async data => {\r\n      if (data.success === \"create link\") {\r\n        await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          res = data\r\n        })\r\n      }\r\n    })\r\n  return res\r\n}\r\n\r\nexport const getActiveLinks = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data;\r\n    })\r\n}\r\n\r\nexport const sendSignUpLink = async (email, link) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      email,\r\n      link\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/send-signup-link\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return true\r\n    })\r\n}\r\n\r\nexport const forgotPassword = async (email) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      email,\r\n      url: process.env.REACT_APP_BACKEND_URL\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getStrategyOptions = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategies\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const passwordConfirmReset = async (password1, password2, pathname) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      password1,\r\n      password2,\r\n      pathname: pathname\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset_confirm/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getScriptFileNames = async() => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_files\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getModuleTypeNames = async() => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_list/\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getFileTypeNames = async(moduleType) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      param_type: moduleType\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_detail_list/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const createScriptFile = async(filename, content, isUpdate) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      filename,\r\n      content,\r\n    })\r\n  };\r\n\r\n  const api = isUpdate ? '/api/update_script_file' : '/api/create_script_file';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nconst convertArraytoString = (src) => {\r\n  if (!src) {\r\n    return ''\r\n  }\r\n\r\n  let dest = ''\r\n  let comma = ''\r\n\r\n  src.forEach(o => {\r\n    dest = dest + comma + o.value\r\n    comma = ','\r\n  })\r\n  return dest\r\n}\r\n\r\nconst convertStringtoArray = (src) => {\r\n  if (!src || !src.length) {\r\n    return null\r\n  }\r\n\r\n  const dest = src.split(',')\r\n  return dest.map((o) => ({\r\n    value: o,\r\n    label: o\r\n  }))\r\n}\r\n\r\nconst convertStringtoHourObject = (src) => {\r\n  return {\r\n    value: src === true || src === 'true' ? true : false,\r\n    label: src === true || src === 'true' ? 'true' : 'false',\r\n  }\r\n}\r\n\r\nconst transformingProcessConfigToQuery = (settings) => {\r\n  return {\r\n    name: settings.name,\r\n    indicator: convertArraytoString(settings.indicator),\r\n    watchlist: convertArraytoString(settings.watchlist),\r\n    position_sizing: convertArraytoString(settings.position_sizing),\r\n    order_routing: convertArraytoString(settings.order_routing),\r\n    data_source: convertArraytoString(settings.data_source),\r\n    live_trading: convertArraytoString(settings.live_trading),\r\n    starting_cash: settings.starting_cash,\r\n    extended_hours: convertArraytoString(settings.extended_hours),\r\n    macro_strategy: convertArraytoString(settings.macro_strategy),\r\n    indicator_signalling: convertArraytoString(settings.indicator_signalling),\r\n    asset_class: convertArraytoString(settings.asset_class),\r\n  };\r\n}\r\n\r\nconst transformingProcessConfigFromParam = (settings) => {\r\n  return {\r\n    name: settings.name,\r\n    indicator: convertStringtoArray(settings.indicator),\r\n    watchlist: convertStringtoArray(settings.watchlist),\r\n    position_sizing: convertStringtoArray(settings.position_sizing),\r\n    order_routing: convertStringtoArray(settings.order_routing),\r\n    data_source: convertStringtoArray(settings.data_source),\r\n    live_trading: convertStringtoArray(settings.live_trading),\r\n    starting_cash: settings.starting_cash,\r\n    extended_hours: convertStringtoHourObject(settings.extended_hours),\r\n    macro_strategy: convertStringtoArray(settings.macro_strategy),\r\n    indicator_signalling: convertStringtoArray(settings.indicator_signalling),\r\n    asset_class: convertStringtoArray(settings.asset_class),\r\n  };\r\n}\r\n\r\nexport const saveConfigFile = async(settings) => {\r\n\r\n\r\n  const data = transformingProcessConfigToQuery(settings)\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: 'bot_configs',\r\n      config: data\r\n    })\r\n  };\r\n\r\n  const api = '/strategy/create_one_config_detail/';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const saveScriptFile = async(filename, contents, isUpdate) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      name: filename,\r\n      contents,\r\n    })\r\n  };\r\n\r\n  const api = '/strategy/save_other_parameters/';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getScriptFile = async(filename) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      filename,\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_file\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\n/** User Management Api*/\r\nexport const getUserList = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/get_user_list\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const updateUserRole = async (id, role) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id,\r\n      role\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/update_user_role\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/delete_user/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getConfigFileList = async (collection) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getBotConfigFileList = async (collection) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getConfigFileDetail = async (collection, name) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n      name,\r\n    })\r\n  };\r\n  const res = await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_item_detail/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n\r\n  return transformingProcessConfigFromParam(res.result)\r\n}\r\n\r\nexport const getBotStatusList = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_status\"\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/bot_status_list/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const updateBotStatus = async (botName, botAction) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_configs\",\r\n      \"name\": botName\r\n    })\r\n  };\r\n\r\n  const apiUrl = botAction === 'start'\r\n    ? '/strategy/bot_run/'\r\n    : botAction === 'pause'\r\n    ? '/strategy/bot_pause/'\r\n    : '/strategy/bot_stop/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getBotConfigList = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_configs\",\r\n    })\r\n  };\r\n\r\n  const apiUrl = '/strategy/config_details/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNewsFinancialData = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  const apiUrl = '/news/symbol_news/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIncomeStatement = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/income_statement/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\nexport const getBalanceSheet = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/balance_sheet/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getCashStatement = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/cash_statement/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getFinancialTotalData = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/financial_total_data/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getStockModalData = async () => {\r\n  const apiUrl = '/scanner/available_items/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMultiFinancials = async (symbols, statement_type) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbols': symbols,\r\n      'financial_part': statement_type,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/multi_financials/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.results\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveScannerView = async (chart_number, symbols, fields) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'chart_number': chart_number,\r\n      'symbols': symbols,\r\n      'fields': fields,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/save_scanner_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.results\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerViewData = async (chart_number) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'chart_number': chart_number,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/scanner_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return data.result\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerDetails = async (exchange='', industry='', sector='', currentPage, pageAmount) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'exchange': exchange,\r\n      'industry': industry,\r\n      'sector': sector,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/ticker_details_list/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTickerScannerOptions = async () => {\r\n  const apiUrl = '/scanner/ticker_details_filter_options/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFloatsFilterOptions = async () => {\r\n  const apiUrl = '/floats/float_details_filter_options/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFloatsDetails = async (pageNumber, pageAmount, exchange='', industry='', sector='') => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'page_num': pageNumber,\r\n      'page_mounts': pageAmount,\r\n      'exchange': exchange,\r\n      'industry': industry,\r\n      'sector': sector,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/floats/float_details_list/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data.results\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveScannerAllViewData = async (allViewData) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(allViewData)\r\n  };\r\n\r\n  const apiURL = '/scanner/save_all_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.results\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerAllViewData = async (chart_number) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/scanner/load_all_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSearchingData = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/scanner/get_searching_data/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSymbolsByMicroStrategy = async (macroStrat, microStrat) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'macro': macroStrat,\r\n      'micro': microStrat\r\n    })\r\n  };\r\n\r\n  const apiURL = '/api/micro_strategy_symbols'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIndicators = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/api/indicator_list'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIndicatorSignallingList = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/api/get_indicator_signalling_list'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiGetDatabases = async() => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  const apiURL = '/api/get_databases'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiGetCollections = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_collections')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiDeleteCollection = async(dbName, collectionName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_collection')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiDeleteDatabase = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_database')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExportDatabase = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_database')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        response.blob().then(blob => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement(\"a\");\r\n          a.href = url;\r\n          a.download = `${dbName}.zip`;\r\n          a.click();\r\n        })\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExportCollection = async(dbName, collectionName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_collection')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        response.blob().then(blob => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement(\"a\");\r\n          a.href = url;\r\n          a.download = `${dbName}_${collectionName}.csv`;\r\n          a.click();\r\n        })\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getWatchListAll = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/scanner/watchlists_all/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          result: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const apiCreateBackup = async(dbName, collectionName = '') => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/create_backup')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExecuteBackup = async(data) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/execute_backup')\r\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\r\n\r\n  try {\r\n    let filename = `${data['database']}.zip`\r\n    if (data['collection']) {\r\n      filename = `${data['database']}_${data['collection']}.csv`\r\n    }\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n          console.log('Json object response')\r\n        } else {\r\n          response.blob().then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = filename;\r\n            a.click();\r\n          })\r\n        }\r\n\r\n        // console.log('response')\r\n        // console.log(response)\r\n\r\n\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiStopBackup = async(data) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/stop_backup')\r\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiGetGoogleNews = async (params) => {\r\n  // const req = {\r\n  //   method: 'GET',\r\n  //   path: 'api/get_google_news'\r\n  // }\r\n\r\n  // return await request(req);\r\n\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_google_news')\r\n  apiURL.search = new URLSearchParams(params).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\nexport const apiGetTradeHistories = async (params) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_trade_histories')\r\n  apiURL.search = new URLSearchParams(params).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { adminRoutes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { createSignUpLink, getActiveLinks, sendSignUpLink } from 'api/Api';\r\nimport { validateEmail } from 'utils/helper';\r\n\r\nvar ps;\r\n\r\nfunction LinkManage() {\r\n  const history = useHistory();\r\n  const [roles, setRoles] = useState([])\r\n  const [isShowSendModal, setIsShowSendModal] = useState(false)\r\n  const [isShowCreateLinkModal, setShowCreateLinkModal] = useState(false);\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  const [selectedInstance, setSelectedInstance] = React.useState('linkmanage');\r\n  const [selectedLink, setSelectedLink] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const optionsRole = [\r\n    { value: 'forward_test', label: 'Forward Test' },\r\n    // { value: 'stress_test', label: 'Stress Test' },\r\n    // { value: 'optimization', label: 'Optimization' },\r\n    { value: 'live_trading', label: 'Live Trade' },\r\n    { value: 'search_engine', label: 'Market' },\r\n    { value: 'scanner', label: 'Scanner' },\r\n    { value: 'trade_data', label: 'Trade Data' },\r\n    { value: 'hybrid_view', label: 'Hybrid View' },\r\n    { value: 'financial_data', label: 'Financial Data' },\r\n    { value: 'floats', label: 'Floats' },\r\n  ]\r\n\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n  useEffect(() => {\r\n    if (!user.is_admin) {\r\n      history.push('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const fetchActiveLinks = async () => {\r\n      let links = await getActiveLinks();\r\n      const filteredLinks = links.filter(link => !link.expired)\r\n      const linklist = filteredLinks.map(link => {\r\n        return {\r\n          id: link.id,\r\n          link: link.link,\r\n          roles: link.role,\r\n          action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              setSelectedLink(link.link)\r\n              showSendEmailModal()\r\n            }}\r\n          >Send</MDBBtn>\r\n        }\r\n      })\r\n      setLinkList(linklist)\r\n    }\r\n\r\n    fetchActiveLinks()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < adminRoutes.length; i++) {\r\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\r\n        return adminRoutes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  const handleCreateLinkModalClose = () => {\r\n    setRoles([])\r\n    setShowCreateLinkModal(false)\r\n  }\r\n\r\n  const handleCreateLinkClick = () => {\r\n    setShowCreateLinkModal(true)\r\n  }\r\n\r\n  const handleRolesChange = (options) => {\r\n    setRoles(options);\r\n  }\r\n\r\n  const handleLinkCreate = async () => {\r\n    let roleValues = ''\r\n    let coma = ''\r\n    roles.forEach(role => {\r\n      roleValues = roleValues + coma + role.value\r\n      coma = ','\r\n    })\r\n\r\n    setIsLoading(true)\r\n    let links = await createSignUpLink(roleValues);\r\n    setIsLoading(false)\r\n\r\n    const linklist = links.map(link => {\r\n      return {\r\n        id: link.id,\r\n        link: link.link,\r\n        roles: link.role,\r\n        action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n          () => {\r\n            setSelectedLink(link.link)\r\n            showSendEmailModal()\r\n          }}\r\n        >Send</MDBBtn>\r\n      }\r\n    })\r\n\r\n    setLinkList(linklist)\r\n    setShowCreateLinkModal(false)\r\n  }\r\n\r\n  const showSendEmailModal = async () => {\r\n    setIsShowSendModal(true);\r\n  }\r\n\r\n  const handleSendEmailModalClose = async () => {\r\n    setIsShowSendModal(false);\r\n  }\r\n\r\n  const handleLinkToEmailSend = async () => {\r\n    if (!validateEmail(email)) {\r\n      alert('Email is invalid')\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    await sendSignUpLink(email, selectedLink);\r\n    setIsLoading(false)\r\n\r\n    alert(`sent to ${email} successfully!`)\r\n\r\n    setEmail('')\r\n    setIsShowSendModal(false);\r\n  }\r\n\r\n  const columns= [\r\n    {\r\n      label: '#',\r\n      field: 'id',\r\n    },\r\n    {\r\n      label: 'Link',\r\n      field: 'link',\r\n    },\r\n    {\r\n      label: 'Roles',\r\n      field: 'roles',\r\n    },\r\n    {\r\n      label: 'Action',\r\n      field: 'action',\r\n    }\r\n  ];\r\n\r\n  const [linklist, setLinkList] = useState()\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={true}\r\n                routes={adminRoutes}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <Modal show={isShowCreateLinkModal} className=\"hunter-modal\" onHide={handleCreateLinkModalClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Create Sign Up link for users</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"select-multi-option\">\r\n                  <Select\r\n                    name=\"filters\"\r\n                    placeholder=\"Roles\"\r\n                    value={roles}\r\n                    onChange={handleRolesChange}\r\n                    options={optionsRole}\r\n                    isMulti={true}\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"hunter-modal-footer\">\r\n                <Button variant=\"primary\" onClick={handleLinkCreate}>\r\n                  Create Link\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={isShowSendModal} className=\"hunter-modal\" onHide={handleSendEmailModalClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Send the link</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control hunter-form-control\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => { handleEmailChange(e)} }\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"hunter-modal-footer\">\r\n                <Button variant=\"primary\" onClick={handleLinkToEmailSend} className=\"hunter-flex-button\">\r\n                  {isLoading && (\r\n                    <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  )}\r\n                  Send\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <div className=\"hunter-page-container\">\r\n                <div className=\"hunter-page-title\">\r\n                  <h3>Link Manage</h3>\r\n                </div>\r\n                <div className=\"col-sm-6 hunter-mdb-table-container\">\r\n                  <div className=\"create-button-bar\">\r\n                    <MDBBtn color=\"blue\" size=\"md\" onClick={handleCreateLinkClick}>Create</MDBBtn>\r\n                  </div>\r\n                  <MDBTable btn>\r\n                    <MDBTableHead columns={columns} color=\"dark\"/>\r\n                    <MDBTableBody rows={linklist} className=\"hunter-mdb-table-body\"/>\r\n                  </MDBTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default LinkManage;","import { createContext, useContext } from \"react\";\r\n\r\nexport const themes = {\r\n  dark: {\r\n    colors: {\r\n      white: '#ffffff',\r\n      red: '#951a1a',\r\n      darkBlue: '#343a40',\r\n      lightBlue: '#6c757d',\r\n      textColor: 'white',\r\n      borderColor: '#cccccc',\r\n      actionButtonColor: '#000',\r\n      actionButtonBg: 'transparent',\r\n      tableTextColor: '#000',\r\n    },\r\n  },\r\n  light: \"white-content\",\r\n};\r\n\r\nexport const useThemeColors = () => {\r\n  const context = useContext(ThemeContext)\r\n  return context.theme.colors\r\n}\r\n\r\nexport const ThemeContext = createContext({\r\n  theme: themes.dark,\r\n  changeTheme: () => {},\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(themes.dark);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add(\"white-content\");\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove(\"white-content\");\r\n        break;\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nexport default function BackgroundColorWrapper(props) {\r\n  const [color, setColor] = useState(backgroundColors.blue);\r\n\r\n  function changeColor(color) {\r\n    setColor(color);\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Provider\r\n      value={{ color: color, changeColor: changeColor }}\r\n    >\r\n      {props.children}\r\n    </BackgroundColorContext.Provider>\r\n  );\r\n}\r\n","import {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext';\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.authUser.isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from 'contexts/authContext'\r\nimport { validateEmail } from 'utils/helper'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n\r\n    let auth = useAuth();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [username, setUserName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState(-1)\r\n    const [message, setMessage] = useState()\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [pathname] = useState(history.location.pathname)\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                signup()\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, []);   \r\n    \r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    \r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    \r\n    const handleConfirmPasswordChange = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n    \r\n    const handleUserNameChange = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    const signup = async () => {\r\n        if (!username.length) {\r\n            setError(1)\r\n            setMessage('user name is wrong')\r\n            return\r\n        }\r\n        if (!email.length) {\r\n            setError(1)\r\n            setMessage('user email is wrong')\r\n            return\r\n        }\r\n        if (!password.length || !confirmPassword.length) {\r\n            setError(1)\r\n            setMessage('password or confirm password is wrong')\r\n            return\r\n        }\r\n        if (password !== confirmPassword) {\r\n            setError(1)\r\n            setMessage('password and confirm password is not matched')\r\n            return\r\n        }\r\n        if (!validateEmail(email)){\r\n            setError(1)\r\n            setMessage('Invalid email')\r\n            return\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        const res = await auth.authUser.signup(username, email, password, confirmPassword, pathname)\r\n        setIsLoading(false)\r\n\r\n        if (res.success) {\r\n            // setError(0)\r\n            // setMessage('Sign Up is successed')\r\n            history.push('/login')\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                        type=\"name\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter user name\"\r\n                        value={username}\r\n                        onChange={(e) => { handleUserNameChange(e)}}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => { handleEmailChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => { handlePasswordChange(e)}}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter confirm password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => { handleConfirmPasswordChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={signup}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Sign up\r\n                    \r\n                </button>\r\n                <div className=\"form-group\">\r\n                    <p className=\"sign-up-area text-right\">\r\n                        <a href=\"/signin\">Sign In?</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {error !== -1 && \r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext'\r\n\r\nconst Verify = () => {\r\n    let auth = useAuth();\r\n    let history = useHistory();\r\n    const [code, setCode] = useState('')\r\n    const [error, setError] = useState(-1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const userId = history.location.state ? history.location.state.userId : null\r\n\r\n    const handleCodeChange = (e) => {\r\n        setCode(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                verify();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n\r\n        if (!userId) {\r\n            history.push('/login')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, [userId, history])\r\n\r\n    const verify = async () => {\r\n        if (!code.length) {\r\n            setError(1)\r\n            setMessage('confirmation code is empty')\r\n            return\r\n        }\r\n        setIsLoading(true)\r\n        const res = await auth.authUser.verify(userId, code)\r\n        setIsLoading(false)\r\n        if (res.verify) {\r\n            const userInfo = {\r\n                email: res.user_email,\r\n                role: res.is_admin ? 'forward_test,stress_test,optimization,live_trade,search_engine,trade_data' : res.role,\r\n                is_admin: res.is_admin,\r\n            }\r\n            localStorage.setItem('user-info', JSON.stringify(userInfo))\r\n            localStorage.setItem('auth-token', JSON.stringify(res.token))\r\n            history.push('/');\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Verify</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Verify Code</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter verify code\"\r\n                        value={code}\r\n                        onChange={(e) => { handleCodeChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={verify}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Verify\r\n                </button>\r\n            </div>\r\n            {error !== -1 &&\r\n                <div class=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Verify","import React, { useState } from \"react\";\r\nimport { validateEmail } from 'utils/helper'\r\nimport { forgotPassword } from 'api/Api'\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n    \r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n    \r\n  const handleForgotPassword = async () => {\r\n    if (!validateEmail(email)) {\r\n      setError(1)\r\n      setMessage('Invalid Email!')\r\n      return\r\n    }\r\n    setIsLoading(true)\r\n    let result = await forgotPassword(email)\r\n    setIsLoading(false)\r\n    if ( result.success ) {\r\n      setError(0)\r\n      setMessage('Password is sent to your email')\r\n      return\r\n    }\r\n    setError(1)\r\n    setMessage('Invalid Email!')\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <div className={\"login-form\"}>\r\n      <div>\r\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => { handleEmailChange(e)}}\r\n          />\r\n        </div>\r\n          <button\r\n            className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n            onClick={handleForgotPassword}\r\n          >\r\n            {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n            )}\r\n            Send\r\n          </button>\r\n          <div className=\"form-group\">\r\n            <p className=\"sign-up-area text-right\">\r\n                <a href=\"/signin\">Sign In?</a>\r\n            </p>\r\n          </div>\r\n      </div>\r\n      {error !== -1 && \r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n          <div className=\"alert-container\">\r\n            <div className=\"alert-content\">\r\n              {message}\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n          </div>\r\n        </div>   \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword","import React, { useState } from \"react\";\r\nimport { passwordConfirmReset } from 'api/Api'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PasswordResetConfirm = () => {\r\n  let history = useHistory();\r\n  const [password1, setPassword1] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  const [pathname] = useState(history.location.pathname)\r\n\r\n  const handlePassword1Change = (e) => {\r\n    setPassword1(e.target.value)\r\n  }\r\n  \r\n  const handlePassword2Change = (e) => {\r\n    setPassword2(e.target.value)\r\n  }\r\n  \r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  const handlePasswordResetConfirm = async () => {\r\n    if (!password1.length || !password2.length) {\r\n      setError(1)\r\n      setMessage('password is empty')\r\n      return\r\n    }\r\n\r\n    if (!password1.length || !password2.length) { \r\n        setError(1)\r\n        setMessage('password did not match')\r\n        return    \r\n    }\r\n\r\n    setIsLoading(true)\r\n    const res = await passwordConfirmReset(password1, password2, pathname)\r\n    setIsLoading(false)\r\n    setError(0)\r\n    if (res.success) {\r\n      setMessage(`success: ${res.content}`)  \r\n      await delay(3000);\r\n      history.push('/login')\r\n    } else {\r\n      setMessage(`error: ${res.content}`)  \r\n    }\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <div className={\"login-form\"}>\r\n      <div>\r\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter new password\"\r\n            value={password1}\r\n            onChange={(e) => { handlePassword1Change(e)}}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter confirm password\"\r\n            value={password2}\r\n            onChange={(e) => { handlePassword2Change(e)}}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n          onClick={handlePasswordResetConfirm}\r\n        >\r\n          {isLoading && (\r\n              <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n          )}\r\n          Reset\r\n        </button>\r\n        <div className=\"form-group\">\r\n          <p className=\"sign-up-area text-right\">\r\n            <a href=\"/signin\">Sign In?</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {error !== -1 && \r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n          <div className=\"alert-container\">\r\n            <div className=\"alert-content\">\r\n              {message}\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n          </div>\r\n        </div>   \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordResetConfirm","import \"./style.css\";\r\nimport Select from 'react-select';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst CustomDropDown = (props) => {\r\n  const { nodes, onChange, inputvalue } = props;\r\n  const [options, setOptions] = useState();\r\n  const [selectedNode, setSelectedNode] = useState();\r\n\r\n  useEffect(() => {\r\n    let nodeOptions = [{\r\n      label: \"All\",\r\n      value: \"All\",\r\n    }];\r\n    nodes.map((node) => {\r\n      if (\"children\" in node) {\r\n        node.children.map((child) => {\r\n          nodeOptions.push({\r\n            value: child.value,\r\n            label: child.label,\r\n          });\r\n        })\r\n      }\r\n    });\r\n\r\n    setOptions(nodeOptions);\r\n\r\n  }, [nodes]);\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <Select\r\n        ref={inputvalue}\r\n        value={selectedNode}\r\n        onChange={onChange}\r\n        options={options}\r\n        className=\"modal-filter-select-box\"\r\n        placeholder=\"\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomDropDown;\r\n","import React from \"react\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomDropDown from \"./dropDown\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport \"./style.css\";\r\n\r\nclass Widget extends React.Component {\r\n  state = {\r\n    checkedAvailableItem: [],\r\n    expandedAvailableItem: [],\r\n    selectedNode: {\r\n      value: \"\",\r\n      label: \"\",\r\n    },\r\n    nodesFilteredAvailableItem: [],\r\n    nodesAvailableItem: [],\r\n\r\n    restoreAvailableItems: [],\r\n    restoreCurrentItems: this.props.currentNodes,\r\n    \r\n    checkedCurrrentItem: [],\r\n    expandedCurrrentItem: [],\r\n    currentNodes: this.props.currentNodes,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onCheckAvailableItem = this.onCheckAvailableItem.bind(this);\r\n    this.onExpandAvailableItem = this.onExpandAvailableItem.bind(this);\r\n    this.onFilterChangeAvailableItem = this.onFilterChangeAvailableItem.bind(this);\r\n\r\n    this.onCheckCurrentItem = this.onCheckCurrentItem.bind(this);\r\n    this.onExpandCurrentItem = this.onExpandCurrentItem.bind(this);\r\n\r\n    this.onAddItems = this.onAddItems.bind(this);\r\n    this.onRemoveItems = this.onRemoveItems.bind(this);\r\n    this.onLoadDefaults = this.onLoadDefaults.bind(this);\r\n\r\n    this.onMoveUp = this.onMoveUp.bind(this);\r\n    this.onMoveDown = this.onMoveDown.bind(this);\r\n\r\n    this.onRestoreClicked = this.onRestoreClicked.bind(this);\r\n    this.onOkClicked = this.onOkClicked.bind(this);\r\n    this.onCancelClicked = this.onCancelClicked.bind(this);\r\n\r\n    this.onGetAvailabelNodes = this.onGetAvailabelNodes.bind(this);\r\n    this.onLoadTotalNodes = this.onLoadTotalNodes.bind(this);\r\n    this.isExistItem = this.isExistItem.bind(this);\r\n\r\n  }\r\n\r\n  onGetAvailabelNodes() {\r\n    const currentItems = cloneDeep(this.state.currentNodes);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    let availableNodes = [];\r\n\r\n    totalNodes.map((totalNode) => {\r\n      let parentFlag = false;\r\n      currentItems.map((totalCurrentNode) => {\r\n        if (totalNode.value === totalCurrentNode.value) {\r\n          parentFlag = true;\r\n          if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n            let totalCurrnetChildrens = [];\r\n            totalCurrentNode.children.map((totalCurrentChild) => {\r\n              totalCurrnetChildrens.push(totalCurrentChild.value);\r\n            });\r\n            totalNode.children.map((totalChild) => {\r\n              if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                let childFlag = false;\r\n                availableNodes.map((availableNode, index) => {\r\n                  if (availableNode.value === totalCurrentNode.value) {\r\n                    availableNodes[index].children.push(totalChild);\r\n                    childFlag = true;\r\n                  }\r\n                })\r\n\r\n                if (!childFlag) {\r\n                  availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!parentFlag) {\r\n        availableNodes.push(totalNode);\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n      restoreAvailableItems: availableNodes,\r\n    });\r\n  }\r\n\r\n  onCheckAvailableItem(checkedAvailableItem) {\r\n    this.setState({ checkedAvailableItem });\r\n  }\r\n\r\n  onExpandAvailableItem(expandedAvailableItem) {\r\n    this.setState({ expandedAvailableItem }, () => {\r\n      console.log(this.state.expandedAvailableItem);\r\n    });\r\n  }\r\n\r\n  onCheckCurrentItem(checkedCurrentItem) {\r\n    this.setState({ checkedCurrentItem });\r\n  }\r\n\r\n  onExpandCurrentItem(expandedCurrentItem) {\r\n    this.setState({ expandedCurrentItem }, () => {\r\n      console.log(this.state.expandedCurrentItem);\r\n    });\r\n  }\r\n\r\n  onFilterChangeAvailableItem(e) {\r\n    this.setState({ selectedNode: e });\r\n    let filteredNodes = [];\r\n    if (e.value === \"All\") {\r\n      filteredNodes = cloneDeep(this.state.nodesAvailableItem);\r\n    } else {\r\n      const availableNodes = cloneDeep(this.state.nodesAvailableItem);\r\n      if (e.label.includes(\"parent\")) {\r\n        filteredNodes = availableNodes.filter((node) => node.label === e.label);\r\n      } else {\r\n        availableNodes.map((node) => {\r\n          if (\"children\" in node) {\r\n            node.children.map((childNode) => {\r\n              if (childNode.label === e.label) {\r\n                filteredNodes.push(node);\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    \r\n    this.setState({\r\n      nodesFilteredAvailableItem: filteredNodes,\r\n    })\r\n  }\r\n\r\n  sortNodes(nodes) {\r\n    let sortedNodes = nodes;\r\n    // let suffixA, suffixB;\r\n    \r\n    // sortedNodes.map((node) => {\r\n    //   if (\"children\" in node) {\r\n    //     node.children.sort(function (a, b) {\r\n    //       suffixA = parseInt(a.value.split(\"_\")[3]);\r\n    //       suffixB = parseInt(b.value.split(\"_\")[3]);\r\n    //       return suffixA - suffixB;\r\n    //     });\r\n    //   }\r\n    // })\r\n\r\n    // sortedNodes.sort(function (a, b) {\r\n    //   suffixA = parseInt(a.value.split(\"_\")[2]);\r\n    //   suffixB = parseInt(b.value.split(\"_\")[2]);\r\n    //   return suffixA - suffixB;\r\n    // });\r\n\r\n    return sortedNodes;\r\n  }\r\n\r\n  onAddItems() {\r\n    const checkedItems = cloneDeep(this.state.checkedAvailableItem);\r\n    const availableItems = cloneDeep(this.state.nodesAvailableItem);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    let availableNodes = [];\r\n    let newCurrentNodes = [];\r\n\r\n    if (checkedItems) {\r\n      checkedItems.map((value) => {\r\n        availableItems.map((availableItem) => {\r\n          if (value.includes(\"child\")) {\r\n            let currentChildItems = [];\r\n            if (\"children\" in availableItem) {\r\n              availableItem.children.map((childItem) => {\r\n                if (childItem.value === value) {\r\n                  currentChildItems.push(childItem);\r\n                }\r\n              })\r\n    \r\n              if (currentChildItems.length > 0) {\r\n                newCurrentNodes.push({ ...availableItem, children: currentChildItems });\r\n              }\r\n            }\r\n          } else {\r\n            if (availableItem.value === value) {\r\n              newCurrentNodes.push(availableItem);\r\n            }\r\n          }\r\n        })\r\n      });\r\n\r\n      \r\n      // merge the new current nodes into original current nodes\r\n      const originCurrentNodes = cloneDeep(this.state.currentNodes);\r\n      let totalNewCurrentNodes = [];\r\n      newCurrentNodes.map((newCurrentNode) => {\r\n        let exist = false;\r\n        originCurrentNodes.map((currentNode) => {\r\n          if (currentNode.value === newCurrentNode.value) {\r\n            let currentChildItems = currentNode.children;\r\n            newCurrentNode.children.map((newChildItem) => {\r\n              currentChildItems.push(newChildItem);\r\n            });\r\n            // totalNewCurrentNodes.push({...currentNode})\r\n            // totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\r\n            exist = true;\r\n          }\r\n        })\r\n        \r\n        if (!exist) {\r\n          let parentExist = false;\r\n          totalNewCurrentNodes.map((node, index) => {\r\n            if (node.value === newCurrentNode.value) {\r\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\r\n              parentExist = true;\r\n            }\r\n          })\r\n          if (!parentExist) {\r\n            totalNewCurrentNodes.push(newCurrentNode);\r\n          }\r\n        }\r\n      })\r\n      \r\n      let totalCurrentNodes = totalNewCurrentNodes;\r\n      originCurrentNodes.map((originNode) => {\r\n        let exist = false;\r\n        totalNewCurrentNodes.map((newNode) => {\r\n          if (originNode.value === newNode.value) {\r\n            exist = true;\r\n          }\r\n        })\r\n        if (!exist) {\r\n          totalCurrentNodes.push(originNode);\r\n        }\r\n      });\r\n\r\n  \r\n      totalNodes.map((totalNode) => {\r\n        let parentFlag = false;\r\n        totalCurrentNodes.map((totalCurrentNode) => {\r\n          if (totalNode.value === totalCurrentNode.value) {\r\n            parentFlag = true;\r\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n              let totalCurrnetChildrens = [];\r\n              totalCurrentNode.children.map((totalCurrentChild) => {\r\n                totalCurrnetChildrens.push(totalCurrentChild.value);\r\n              });\r\n              totalNode.children.map((totalChild) => {\r\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                  let childFlag = false;\r\n                  availableNodes.map((availableNode, index) => {\r\n                    if (availableNode.value === totalCurrentNode.value) {\r\n                      availableNodes[index].children.push(totalChild);\r\n                      childFlag = true;\r\n                    }\r\n                  })\r\n  \r\n                  if (!childFlag) {\r\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                  }\r\n                }\r\n              })\r\n            }\r\n          }\r\n        });\r\n  \r\n        if (!parentFlag) {\r\n          availableNodes.push(totalNode);\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        currentNodes: totalCurrentNodes,\r\n        nodesAvailableItem: availableNodes,\r\n        nodesFilteredAvailableItem: availableNodes,\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onRemoveItems() {\r\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\r\n    const currentItems = cloneDeep(this.state.currentNodes);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    \r\n    let availableNodes = [];\r\n    let newCurrentNodes = [];\r\n    \r\n    if (checkedItems) {\r\n      checkedItems.map((value) => {\r\n        currentItems.map((availableItem) => {\r\n          if (value.includes(\"child\")) {\r\n            let currentChildItems = [];\r\n            if (\"children\" in availableItem) {\r\n              availableItem.children.map((childItem) => {\r\n                if (childItem.value === value) {\r\n                  currentChildItems.push(childItem);\r\n                }\r\n              })\r\n              \r\n              if (currentChildItems.length > 0) {\r\n                let filteredNode = newCurrentNodes.filter(node => node.value === availableItem.value)\r\n                if (filteredNode.length) {\r\n                  filteredNode[0].children.push( ...currentChildItems );\r\n                } else {\r\n                  newCurrentNodes.push({ ...availableItem, children: currentChildItems });\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (availableItem.value === value) {\r\n              newCurrentNodes.push(availableItem);\r\n            }\r\n          }\r\n        })\r\n      });\r\n      \r\n      // merge the new current nodes into original current nodes\r\n\r\n      const originCurrentNodes = cloneDeep(this.state.nodesAvailableItem);\r\n      let totalNewCurrentNodes = [];\r\n      newCurrentNodes.map((newCurrentNode) => {\r\n        let exist = false;\r\n        let currentChildItems\r\n        originCurrentNodes.map((currentNode) => {\r\n          \r\n          if (currentNode.value === newCurrentNode.value) {\r\n            currentChildItems = currentNode.children;\r\n            newCurrentNode.children.map((newChildItem) => {\r\n              currentChildItems.push(newChildItem);\r\n            });\r\n            totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\r\n            exist = true;\r\n          }\r\n        })\r\n  \r\n        if (!exist) {\r\n          let parentExist = false;\r\n          totalNewCurrentNodes.map((node, index) => {\r\n            if (node.value === newCurrentNode.value) {\r\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\r\n              parentExist = true;\r\n            }\r\n          })\r\n          if (!parentExist) {\r\n            totalNewCurrentNodes.push(newCurrentNode);\r\n          }\r\n        }\r\n      })\r\n\r\n      let totalCurrentNodes = totalNewCurrentNodes;\r\n      originCurrentNodes.map((originNode) => {\r\n        let exist = false;\r\n        totalNewCurrentNodes.map((newNode) => {\r\n          if (originNode.value === newNode.value) {\r\n            exist = true;\r\n          }\r\n        })\r\n        if (!exist) {\r\n          totalCurrentNodes.push(originNode);\r\n        }\r\n      });\r\n  \r\n      totalNodes.map((totalNode) => {\r\n        let parentFlag = false;\r\n        totalCurrentNodes.map((totalCurrentNode) => {\r\n          if (totalNode.value === totalCurrentNode.value) {\r\n            parentFlag = true;\r\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n              let totalCurrnetChildrens = [];\r\n              totalCurrentNode.children.map((totalCurrentChild) => {\r\n                totalCurrnetChildrens.push(totalCurrentChild.value);\r\n              });\r\n              totalNode.children.map((totalChild) => {\r\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                  let childFlag = false;\r\n                  availableNodes.map((availableNode, index) => {\r\n                    if (availableNode.value === totalCurrentNode.value) {\r\n                      availableNodes[index].children.push(totalChild);\r\n                      childFlag = true;\r\n                    }\r\n                  })\r\n  \r\n                  if (!childFlag) {\r\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                  }\r\n                }\r\n              })\r\n            }\r\n          }\r\n        });\r\n  \r\n        if (!parentFlag) {\r\n          availableNodes.push(totalNode);\r\n        }\r\n      })\r\n  \r\n      this.setState({\r\n        currentNodes: availableNodes,\r\n        nodesAvailableItem: totalCurrentNodes,\r\n        nodesFilteredAvailableItem: totalCurrentNodes,\r\n      });\r\n    }\r\n  }\r\n\r\n  isExistItem(key, item, currentNodes) {\r\n    let isExist = false\r\n    currentNodes.forEach((current) => {\r\n      if (current.value === key) {\r\n        current.children.forEach((child) => {\r\n          if (child.value === item.value) {\r\n            isExist = true\r\n            return\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return isExist  \r\n  }\r\n\r\n  onLoadTotalNodes() {\r\n    const totalNodes = this.props.totalNodes;\r\n    let availableNodes = [];\r\n\r\n    if (!this.props.currentNodes) {\r\n      return\r\n    }\r\n\r\n    totalNodes.map((item) => {\r\n      let pushItem = {...item};\r\n      if (\"children\" in pushItem) {\r\n        if (pushItem.children.length > 0) {\r\n          let availableChildItems = [];\r\n          pushItem.children.map((childItem) => {\r\n            if (!this.isExistItem(pushItem.value, childItem, this.props.currentNodes)) {\r\n              availableChildItems.push(childItem);\r\n            }\r\n          });\r\n\r\n          if (availableChildItems.length > 0) {\r\n            availableNodes.push({...pushItem, children: availableChildItems});\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n    });\r\n  }\r\n\r\n  onLoadDefaults() {\r\n    const totalNodes = this.props.totalNodes;\r\n    let defaultNodes = [];\r\n    let availableNodes = [];\r\n    totalNodes.map((item) => {\r\n      let pushItem = {...item};\r\n      if (pushItem.default) {\r\n        if (\"children\" in pushItem) {\r\n          if (pushItem.children.length > 0) {\r\n            let currentChildItems = [];\r\n            let availableChildItems = [];\r\n            pushItem.children.map((childItem) => {\r\n              if (childItem.default) {\r\n                currentChildItems.push(childItem);\r\n              } else {\r\n                availableChildItems.push(childItem);\r\n              }\r\n            });\r\n\r\n            if (currentChildItems.length > 0) {\r\n              defaultNodes.push({...pushItem, children: currentChildItems});\r\n            }\r\n\r\n            if (availableChildItems.length > 0) {\r\n              availableNodes.push({...pushItem, children: availableChildItems});\r\n            }\r\n          } else {\r\n            defaultNodes.push(pushItem);\r\n          }\r\n        } else {\r\n          defaultNodes.push(pushItem);\r\n        }\r\n      } else {\r\n        availableNodes.push(pushItem);\r\n      }\r\n    });\r\n    this.setState({\r\n      currentNodes: defaultNodes,\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n    });\r\n  }\r\n\r\n  moveItem(direction) {\r\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\r\n    const currentNodes = cloneDeep(this.state.currentNodes);\r\n\r\n    if (checkedItems && Array.isArray(checkedItems)) {\r\n      let moveEnable = true;\r\n      checkedItems.sort();\r\n      let parentSuffix = [];\r\n      let childFlag = false;\r\n      checkedItems.map((item) => {\r\n        if (item.includes(\"child\")) {\r\n          parentSuffix.push(item.split(\"_\")[2]); // push child\r\n          childFlag = true;\r\n        }\r\n        if (item.includes(\"parent\")) {\r\n          if (parentSuffix.length > 0) {\r\n            alert (\"Please select one node\");\r\n            moveEnable = false;\r\n          } else {\r\n            parentSuffix.push(item.split(\"_\")[2]); // push parent\r\n          }\r\n        }\r\n      });\r\n      const uniqParentSuffix = [...new Set(parentSuffix)];\r\n      if (uniqParentSuffix.length !== 1) {\r\n        alert (\"Please select one node\");\r\n        moveEnable = false;\r\n      } else {\r\n        let parentValue = '';\r\n        parentValue = \"parent_value_\" + uniqParentSuffix[0];\r\n        let nodeIndex;\r\n        currentNodes.map((node, index) => {\r\n          if (node.value === parentValue) {\r\n            if (childFlag) {\r\n              if (node.children.length === checkedItems.length) {\r\n                nodeIndex = {\r\n                  status: 'parent',\r\n                  parentIndex: index,\r\n                  childIndex: null,\r\n                };\r\n              } else {\r\n                if (checkedItems.length !== 1) {\r\n                  alert (\"Please select one node\");\r\n                  moveEnable = false;\r\n                } else {\r\n                  node.children.map((child, childIndex) => {\r\n                    if (child.value === checkedItems[0]) {\r\n                      nodeIndex = {\r\n                        status: 'child',\r\n                        parentIndex: index,\r\n                        childIndex: childIndex,\r\n                      };\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            } else {\r\n              nodeIndex = {\r\n                status: 'parent',\r\n                parentIndex: index,\r\n                childIndex: null,\r\n              };\r\n            }\r\n          }\r\n        })\r\n        \r\n        if (moveEnable) {\r\n          if (direction === 'up') {\r\n            if (nodeIndex.status === 'parent') {\r\n              if (nodeIndex.parentIndex > 0) {\r\n                const temp = currentNodes[nodeIndex.parentIndex - 1];\r\n                currentNodes[nodeIndex.parentIndex - 1] = currentNodes[nodeIndex.parentIndex];\r\n                currentNodes[nodeIndex.parentIndex] = temp;\r\n              }\r\n            } else {\r\n              if (nodeIndex.childIndex > 0) {\r\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\r\n              }\r\n            }\r\n          } else {\r\n            if (nodeIndex.status === 'parent') {\r\n              if (nodeIndex.parentIndex < currentNodes.length - 1) {\r\n                const temp = currentNodes[nodeIndex.parentIndex + 1];\r\n                currentNodes[nodeIndex.parentIndex + 1] = currentNodes[nodeIndex.parentIndex];\r\n                currentNodes[nodeIndex.parentIndex] = temp;\r\n              }\r\n            } else {\r\n              if (nodeIndex.childIndex < currentNodes[nodeIndex.parentIndex].children.length - 1) {\r\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          currentNodes: currentNodes,\r\n        });\r\n      }\r\n    } else {\r\n      alert (\"You didn't select the node\");\r\n    }\r\n  }\r\n\r\n  onMoveUp() {\r\n    this.moveItem('up');\r\n  }\r\n\r\n  onMoveDown() {\r\n    this.moveItem('down');\r\n  }\r\n\r\n  onRestoreClicked() {\r\n    this.setState({\r\n      nodesAvailableItem: this.state.restoreAvailableItems,\r\n      currentNodes: this.state.restoreCurrentItems,\r\n    });\r\n  }\r\n\r\n  onOkClicked() {\r\n    this.props.handleCurrentNodesChanged(this.state.currentNodes);\r\n    this.props.handleVisible(false);\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.setState({\r\n      nodesAvailableItem: this.state.restoreAvailableItems,\r\n      currentNodes: this.state.restoreCurrentItems,\r\n    });\r\n    this.props.handleVisible(false);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onGetAvailabelNodes();\r\n    this.onLoadTotalNodes();\r\n  }\r\n\r\n  render() {\r\n    const { checkedAvailableItem, expandedAvailableItem, nodesFilteredAvailableItem } = this.state;\r\n\r\n    return (\r\n      <div className=\"widget-container\">\r\n        <div className=\"modal-main\">\r\n          <div className=\"filter-container left-group\">\r\n            <div className=\"left-box-header\">\r\n              <span>Available Items</span>\r\n            </div>\r\n            <div className=\"items-area\">\r\n              <CustomDropDown\r\n                nodes={this.state.nodesAvailableItem}\r\n                onChange={this.onFilterChangeAvailableItem}\r\n              />\r\n              <CheckboxTree\r\n                checked={checkedAvailableItem}\r\n                expanded={expandedAvailableItem}\r\n                nodes={nodesFilteredAvailableItem}\r\n                onCheck={this.onCheckAvailableItem}\r\n                onExpand={this.onExpandAvailableItem}\r\n              />\r\n            </div>\r\n            <div className=\"left-box-footer\">\r\n              <div className=\"modal-btn btn-exchange\" onClick={this.onAddItems}>\r\n                <span>{\"Add Item(s) >>\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"filter-container right-group\">\r\n            <div className=\"right-box-header\">\r\n              <span>Available Items</span>\r\n            </div>\r\n            <div className=\"items-container\">\r\n              <div>\r\n                <div className=\"items-area\">\r\n                  <CheckboxTree\r\n                    checked={this.state.checkedCurrentItem}\r\n                    expanded={this.state.expandedCurrentItem}\r\n                    nodes={this.state.currentNodes}\r\n                    onCheck={this.onCheckCurrentItem}\r\n                    onExpand={this.onExpandCurrentItem}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"right-box-btn-group\">\r\n                <div className=\"right-top-btn\">\r\n                  <div className=\"modal-btn\" onClick={this.onLoadDefaults}>\r\n                    <span>Load Defaults</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"right-bottom-btn\">\r\n                  <div className=\"modal-btn\" onClick={this.onMoveUp}>\r\n                    <span>Move Up</span>\r\n                  </div>\r\n                  <div className=\"modal-btn\" onClick={this.onMoveDown}>\r\n                    <span>Move Down</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right-box-footer\">\r\n              <div className=\"modal-btn btn-exchange\" onClick={this.onRemoveItems}>\r\n                <span>{\"<< Remove Item(s)\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <div className=\"modal-footer-left-button-group\">\r\n            <div className=\"modal-btn restore-btn\" onClick={this.onRestoreClicked}>\r\n              <span>Restore</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer-right-button-group\">\r\n            <div className=\"modal-btn ok-btn\" onClick={this.onOkClicked}>\r\n              <span>Ok</span>\r\n            </div>\r\n            <div className=\"modal-btn cancel-btn\" onClick={this.onCancelClicked}>\r\n              <span>Cancel</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Widget;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Widget from './components/modal/Widget';\r\n\r\nimport { getStockModalData } from 'api/Api';\r\n\r\nconst WatchListEditColumnWidget = (props) => {\r\n  const [totalNodes, setTotalNodes] = useState([]);\r\n  const [currentNodes, setCurrentNodes] = useState(props.selectedColumns);\r\n  \r\n  const handleCurrentNodesChanged = (nodes) => {\r\n    setCurrentNodes(nodes);\r\n    props.setColumns(nodes)\r\n  };\r\n\r\n  const handleVisible = (visibleStatus) => {\r\n    props.handleModalClose()\r\n  };\r\n\r\n  useEffect(() => {\r\n    let nodes = [];\r\n    let childNodes = [];\r\n\r\n    const getModalData = async () => {\r\n      let res = await getStockModalData();\r\n      if (res.result) {\r\n        const avgBars = res.result.avg_bars;\r\n        const avgLosingTrade = res.result.avg_losing_trade;\r\n        const avgTrade = res.result.avg_trade;\r\n        const buyHold = res.result.buy_hold;\r\n\r\n        // Avg # Bars\r\n        childNodes = [];\r\n        avgBars.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_1_' + (index + 1),\r\n            default: avgBars.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Avg # Bars',\r\n            value: 'parent_value_1',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        // Avg Losing Trade\r\n        childNodes = [];\r\n        avgLosingTrade.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_2_' + (index + 1),\r\n            default: avgLosingTrade.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Avg Losing Trade',\r\n            value: 'parent_value_2',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } else {\r\n          nodes.push({\r\n            label: 'Avg Losing Trade',\r\n            value: 'parent_value_2',\r\n            default: false,\r\n          });\r\n        }\r\n\r\n        // Avg Trade\r\n        childNodes = [];\r\n        avgTrade.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_4_' + (index + 1),\r\n            default: avgTrade.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Avg Trade',\r\n            value: 'parent_value_4',\r\n            children: childNodes,\r\n            default: false,\r\n          });\r\n        }\r\n\r\n        // Buy Hold\r\n        childNodes = [];\r\n        buyHold.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_5_' + (index + 1),\r\n            default: buyHold.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Buy & Hold',\r\n            value: 'parent_value_5',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const commission_paid = res.result.commission_paid;\r\n        childNodes = [];\r\n        commission_paid.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_6_' + (index + 1),\r\n            default: commission_paid.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Commission Paid:',\r\n            value: 'parent_value_6',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }\r\n\r\n        const gross_loss = res.result.gross_loss;\r\n        childNodes = [];\r\n        gross_loss.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_7_' + (index + 1),\r\n            default: gross_loss.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Gross Loss',\r\n            value: 'parent_value_7',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const gross_profit = res.result.gross_profit;\r\n        childNodes = [];\r\n        gross_profit.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_8_' + (index + 1),\r\n            default: gross_profit.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Gross Profit',\r\n            value: 'parent_value_8',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }\r\n\r\n        // const losing_trade = res.result.losing_trade;\r\n        // childNodes = [];\r\n        // losing_trade.total.map((node, index) => {\r\n        //   childNodes.push({\r\n        //     label: node,\r\n        //     value: 'child_value_9_' + (index + 1),\r\n        //     default: losing_trade.defaults.includes(node) ? true : false,\r\n        //   });\r\n        // });\r\n\r\n        // if (childNodes.length > 0) {\r\n        //   nodes.push({\r\n        //     label: 'Losing Trade',\r\n        //     value: 'parent_value_9',\r\n        //     children: childNodes,\r\n        //     default: true,\r\n        //   });\r\n        // } \r\n\r\n        const largest = res.result.largest;\r\n        childNodes = [];\r\n        largest.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_10_' + (index + 1),\r\n            default: largest.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Largest',\r\n            value: 'parent_value_10',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const margin_calls = res.result.margin_calls;\r\n        childNodes = [];\r\n        margin_calls.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_11_' + (index + 1),\r\n            default: margin_calls.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Margin Calls',\r\n            value: 'parent_value_11',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const max = res.result.max;\r\n        childNodes = [];\r\n        max.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_12_' + (index + 1),\r\n            default: max.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Max',\r\n            value: 'parent_value_12',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }\r\n\r\n        const net = res.result.net;\r\n        childNodes = [];\r\n        net.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_13_' + (index + 1),\r\n            default: net.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Net',\r\n            value: 'parent_value_13',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const number = res.result.number;\r\n        childNodes = [];\r\n        number.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_14_' + (index + 1),\r\n            default: number.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Number',\r\n            value: 'parent_value_14',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const open = res.result.open;\r\n        childNodes = [];\r\n        open.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_15_' + (index + 1),\r\n            default: open.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Open',\r\n            value: 'parent_value_15',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }\r\n\r\n        const percent_profitable = res.result.percent_profitable;\r\n        childNodes = [];\r\n        percent_profitable.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_16_' + (index + 1),\r\n            default: percent_profitable.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Percent Profitable',\r\n            value: 'parent_value_16',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n        const profit_factor = res.result.profit_factor;\r\n        childNodes = [];\r\n        profit_factor.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_17_' + (index + 1),\r\n            default: profit_factor.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Profit Factor',\r\n            value: 'parent_value_17',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }  \r\n\r\n        const ratio_avg_win = res.result.ratio_avg_win;\r\n        childNodes = [];\r\n        ratio_avg_win.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_18_' + (index + 1),\r\n            default: ratio_avg_win.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Ratio Avg Win',\r\n            value: 'parent_value_18',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }   \r\n\r\n        const sharpe_ratio = res.result.sharpe_ratio;\r\n        childNodes = [];\r\n        sharpe_ratio.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_19_' + (index + 1),\r\n            default: sharpe_ratio.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Sharpe Ratio',\r\n            value: 'parent_value_19',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }    \r\n\r\n        const take_at = res.result.take_at;\r\n        childNodes = [];\r\n        take_at.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_20_' + (index + 1),\r\n            default: take_at.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Take At',\r\n            value: 'parent_value_20',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        }    \r\n\r\n        const comment = res.result.comment;\r\n        childNodes = [];\r\n        comment.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_21_' + (index + 1),\r\n            default: comment.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Comment',\r\n            value: 'parent_value_21',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } \r\n\r\n      }\r\n      setTotalNodes(nodes);\r\n    };\r\n    getModalData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"watch-list-edit-column-widget\">\r\n      {totalNodes.length > 0 && (\r\n        <Widget\r\n          totalNodes={totalNodes}\r\n          currentNodes={currentNodes}\r\n          handleCurrentNodesChanged={handleCurrentNodesChanged}\r\n          handleVisible={handleVisible}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchListEditColumnWidget;\r\n","export const dummyNodes = [\r\n  {\r\n    value: \"parent_value_1\",\r\n    label: \"parent_label_1\",\r\n    children: [\r\n      {\r\n        value: \"child_value_1_1\",\r\n        label: \"child_label_1_1\",\r\n        default: true,\r\n      },\r\n      {\r\n        value: \"child_value_1_2\",\r\n        label: \"child_label_1_2\",\r\n        default: true,\r\n      }\r\n    ],\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_2\",\r\n    label: \"parent_label_2\",\r\n    children: [\r\n      {\r\n        value: \"child_value_2_1\",\r\n        label: \"child_label_2_1\",\r\n        default: true,\r\n      },\r\n      {\r\n        value: \"child_value_2_2\",\r\n        label: \"child_label_2_2\",\r\n        default: false,\r\n      }\r\n    ],\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_3\",\r\n    label: \"parent_label_3\",\r\n    children: [\r\n      {\r\n        value: \"child_value_3_1\",\r\n        label: \"child_label_3_1\",\r\n        default: false,\r\n      },\r\n      {\r\n        value: \"child_value_3_2\",\r\n        label: \"child_label_3_2\",\r\n        default: false,\r\n      },\r\n      {\r\n        value: \"child_value_3_3\",\r\n        label: \"child_label_3_3\",\r\n        default: false,\r\n      }\r\n    ],\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_4\",\r\n    label: \"parent_label_4\",\r\n    children: [\r\n      {\r\n        value: \"child_value_4_1\",\r\n        label: \"child_label_4_1\",\r\n        default: true,\r\n      },\r\n      {\r\n        value: \"child_value_4_2\",\r\n        label: \"child_label_4_2\",\r\n        default: false,\r\n      },\r\n      {\r\n        value: \"child_value_4_3\",\r\n        label: \"child_label_4_3\",\r\n        default: true,\r\n      }\r\n    ],\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_5\",\r\n    label: \"parent_label_5\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_6\",\r\n    label: \"parent_label_6\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_7\",\r\n    label: \"parent_label_7\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_8\",\r\n    label: \"parent_label_8\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_9\",\r\n    label: \"parent_label_9\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_10\",\r\n    label: \"parent_label_10\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_11\",\r\n    label: \"parent_label_11\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_12\",\r\n    label: \"parent_label_12\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_13\",\r\n    label: \"parent_label_13\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_14\",\r\n    label: \"parent_label_14\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_15\",\r\n    label: \"parent_label_15\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_16\",\r\n    label: \"parent_label_16\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_17\",\r\n    label: \"parent_label_17\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_18\",\r\n    label: \"parent_label_18\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_19\",\r\n    label: \"parent_label_19\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_20\",\r\n    label: \"parent_label_20\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_21\",\r\n    label: \"parent_label_21\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_22\",\r\n    label: \"parent_label_22\",\r\n    default: false,\r\n  }\r\n];\r\n\r\nexport const dummyCurrentNodes = [\r\n  {\r\n    value: \"parent_value_2\",\r\n    label: \"parent_label_2\",\r\n    children: [\r\n      {\r\n        value: \"child_value_2_1\",\r\n        label: \"child_label_2_1\",\r\n        default: true,\r\n      },\r\n      {\r\n        value: \"child_value_2_2\",\r\n        label: \"child_label_2_2\",\r\n        default: false,\r\n      }\r\n    ],\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_4\",\r\n    label: \"parent_label_4\",\r\n    children: [\r\n      {\r\n        value: \"child_value_4_1\",\r\n        label: \"child_label_4_1\",\r\n        default: true,\r\n      },\r\n      {\r\n        value: \"child_value_4_2\",\r\n        label: \"child_label_4_2\",\r\n        default: false,\r\n      },\r\n      {\r\n        value: \"child_value_4_3\",\r\n        label: \"child_label_4_3\",\r\n        default: true,\r\n      }\r\n    ],\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_10\",\r\n    label: \"parent_label_10\",\r\n    default: true,\r\n  },\r\n  {\r\n    value: \"parent_value_11\",\r\n    label: \"parent_label_11\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_12\",\r\n    label: \"parent_label_12\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_13\",\r\n    label: \"parent_label_13\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_14\",\r\n    label: \"parent_label_14\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_15\",\r\n    label: \"parent_label_15\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_21\",\r\n    label: \"parent_label_21\",\r\n    default: false,\r\n  },\r\n  {\r\n    value: \"parent_value_22\",\r\n    label: \"parent_label_22\",\r\n    default: false,\r\n  }\r\n];\r\n\r\nexport const defaultFields = [\r\n  {\r\n    label: \"Avg # Bars\",\r\n    value: \"parent_value_1\",\r\n    children: [\r\n      {\r\n        label: \"Avg # Bars In Losing Trades: All\",\r\n        value: \"child_value_1_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars In Losing Trades: Long\",\r\n        value: \"child_value_1_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars In Losing Trades: Short\",\r\n        value: \"child_value_1_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars In Winning Trades: All\",\r\n        value: \"child_value_1_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars In Winning Trades: Long\",\r\n        value: \"child_value_1_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars In Winning Trades: Short\",\r\n        value: \"child_value_1_6\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars in Trades: All\",\r\n        value: \"child_value_1_7\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars in Trades: Long\",\r\n        value: \"child_value_1_8\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg # Bars in Trades: Short\",\r\n        value: \"child_value_1_9\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Avg Losing Trade\",\r\n    value: \"parent_value_2\",\r\n    children: [\r\n      {\r\n        label: \"Avg Losing Trade %: All\",\r\n        value: \"child_value_2_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Losing Trade %: Long\",\r\n        value: \"child_value_2_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Losing Trade %: Short\",\r\n        value: \"child_value_2_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Losing Trade: All\",\r\n        value: \"child_value_2_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Losing Trade: Long\",\r\n        value: \"child_value_2_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Losing Trade: Short\",\r\n        value: \"child_value_2_6\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Avg Trade\",\r\n    value: \"parent_value_4\",\r\n    children: [\r\n      {\r\n        label: \"Avg Trade %: All\",\r\n        value: \"child_value_4_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Trade %: Long\",\r\n        value: \"child_value_4_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Trade %: Short\",\r\n        value: \"child_value_4_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Trade: All\",\r\n        value: \"child_value_4_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Trade: Long\",\r\n        value: \"child_value_4_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Avg Trade: Short\",\r\n        value: \"child_value_4_6\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Buy & Hold\",\r\n    value: \"parent_value_5\",\r\n    children: [\r\n      {\r\n        label: \"Buy & Hold Return\",\r\n        value: \"child_value_5_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Buy & Hold Return %\",\r\n        value: \"child_value_5_2\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Commission Paid:\",\r\n    value: \"parent_value_6\",\r\n    children: [\r\n      {\r\n        label: \"Commission Paid: All\",\r\n        value: \"child_value_6_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Commission Paid: Long\",\r\n        value: \"child_value_6_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Commission Paid: Short\",\r\n        value: \"child_value_6_3\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Gross Loss\",\r\n    value: \"parent_value_7\",\r\n    children: [\r\n      {\r\n        label: \"Gross Loss %: All\",\r\n        value: \"child_value_7_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Loss %: Long\",\r\n        value: \"child_value_7_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Loss %: Short\",\r\n        value: \"child_value_7_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Loss: All\",\r\n        value: \"child_value_7_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Loss: Long\",\r\n        value: \"child_value_7_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Loss: Short\",\r\n        value: \"child_value_7_6\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Gross Profit\",\r\n    value: \"parent_value_8\",\r\n    children: [\r\n      {\r\n        label: \"Gross Profit %: All\",\r\n        value: \"child_value_8_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Profit %: Long\",\r\n        value: \"child_value_8_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Profit %: Short\",\r\n        value: \"child_value_8_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Profit: All\",\r\n        value: \"child_value_8_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Profit: Long\",\r\n        value: \"child_value_8_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Gross Profit: Short\",\r\n        value: \"child_value_8_6\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  // {\r\n  //   label: \"Losing Trade\",\r\n  //   value: \"parent_value_9\",\r\n  //   children: [\r\n  //     {\r\n  //       label: \"Losing Trade %: All\",\r\n  //       value: \"child_value_9_1\",\r\n  //       default: true\r\n  //     },\r\n  //     {\r\n  //       label: \"Losing Trade %: Long\",\r\n  //       value: \"child_value_9_2\",\r\n  //       default: true\r\n  //     }\r\n  //   ],\r\n  //   default: true\r\n  // },\r\n  {\r\n    label: \"Largest\",\r\n    value: \"parent_value_10\",\r\n    children: [\r\n      {\r\n        label: \"Largest Losing Trade %: Short\",\r\n        value: \"child_value_10_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Losing Trade: All\",\r\n        value: \"child_value_10_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Losing Trade: Long\",\r\n        value: \"child_value_10_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Losing Trade: Short\",\r\n        value: \"child_value_10_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade %: All\",\r\n        value: \"child_value_10_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade %: Long\",\r\n        value: \"child_value_10_6\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade %: Short\",\r\n        value: \"child_value_10_7\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade: All\",\r\n        value: \"child_value_10_8\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade: Long\",\r\n        value: \"child_value_10_9\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Largest Winning Trade: Short\",\r\n        value: \"child_value_10_10\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Margin Calls\",\r\n    value: \"parent_value_11\",\r\n    children: [\r\n      {\r\n        label: \"Margin Calls: All\",\r\n        value: \"child_value_11_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Margin Calls: Long\",\r\n        value: \"child_value_11_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Margin Calls: Short\",\r\n        value: \"child_value_11_3\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Max\",\r\n    value: \"parent_value_12\",\r\n    children: [\r\n      {\r\n        label: \"Max Contracts Held: All\",\r\n        value: \"child_value_12_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Max Contracts Held: Long\",\r\n        value: \"child_value_12_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Max Contracts Held: Short\",\r\n        value: \"child_value_12_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Max Drawdown\",\r\n        value: \"child_value_12_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Max Drawdown %\",\r\n        value: \"child_value_12_5\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  },\r\n  {\r\n    label: \"Net\",\r\n    value: \"parent_value_13\",\r\n    children: [\r\n      {\r\n        label: \"Net Profit %: All\",\r\n        value: \"child_value_13_1\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Net Profit %: Long\",\r\n        value: \"child_value_13_2\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Net Profit %: Short\",\r\n        value: \"child_value_13_3\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Net Profit: All\",\r\n        value: \"child_value_13_4\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Net Profit: Long\",\r\n        value: \"child_value_13_5\",\r\n        default: true\r\n      },\r\n      {\r\n        label: \"Net Profit: Short\",\r\n        value: \"child_value_13_6\",\r\n        default: true\r\n      }\r\n    ],\r\n    default: true\r\n  }\r\n]","import React, { useCallback, useEffect, useState, useMemo } from 'react'\r\nimport { Button, Input } from 'reactstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import BarChart from 'components/FinancialDashboard/SmallBarChart';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport WatchListEditColumnWidget from 'components/WatchListEditColumnWidget/WatchListEditColumnWidget'\r\nimport './WatchListItem.css'\r\nimport Select from 'react-select'\r\n\r\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\"\r\n\r\nimport { defaultFields, defaultItmes } from '../WatchListEditColumnWidget/components/modal/nodes'\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\nimport { useDatatableLoading, useDatatable, usePagination, usePaginationUpdate } from \"contexts/DatatableContext\"\r\nimport {\r\n  getSearchingData\r\n} from 'api/Api';\r\n\r\nimport { CSVLink } from \"react-csv\"\r\n\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\nconst WatchListItem = (props) => {\r\n  const [isLoadedWatchListOptions, setIsLoadedWatchListOptions] = useState(true)\r\n  const [selectedColumns, setSelectedColumns] = useState(\r\n    []\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpenedEditColumnWidget, setIsOpenedEditColumnWidget] = useState(false)\r\n  const [isUpdatedCols, setIsUpdatedCols] = useState(false)\r\n  const [columnItems, setColumnItems] = useState([])\r\n  const [totalHeader, setTotalHeader] = useState([])\r\n  const [searchKey, setSearchKey] = useState('')\r\n  const [csvData, setCsvData] = useState([])\r\n\r\n\r\n  const handleColumnsChange = () => {\r\n    setIsOpenedEditColumnWidget(true)\r\n  }\r\n\r\n  const handleSearching = () => {\r\n    // console.log(searchKey)\r\n    // console.log(selectedColumns)\r\n    loadSearchingData(searchKey)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setIsOpenedEditColumnWidget(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoadedWatchListOptions(true)\r\n    loadTableData(NaN)\r\n  }, [])\r\n\r\n  const loadTableData = async (cols) => {\r\n    const result = await getSearchingData();\r\n    if (!result.success || result.data == undefined) return;\r\n    setTotalHeader(result.data.header)\r\n    let headerData = filterTableData(defaultFields)\r\n    if (cols) {\r\n      headerData = cols\r\n    }\r\n    const tableHeader = hearder_columns(headerData);\r\n    let bodyData = result.data.rows\r\n    bodyData.forEach(function (row, index) {\r\n      for (let item in row) {\r\n        if (!headerData.includes(item)) {\r\n          delete bodyData[index][item]\r\n        }\r\n      }\r\n    });\r\n    setCsvData(bodyData)\r\n    setDatatable({\r\n      columns: tableHeader,\r\n      rows: bodyData\r\n    })\r\n\r\n  }\r\n\r\n  const loadSearchingData = async (keyString) => {\r\n    if (keyString == '') {\r\n      loadTableData(NaN);\r\n      return\r\n    }\r\n    const result = await getSearchingData();\r\n    if (!result.success || result.data == undefined) return;\r\n    let headerData = columnItems\r\n    if (headerData.length == 0) {\r\n      headerData = filterTableData(defaultFields)\r\n    }\r\n    const tableHeader = hearder_columns(headerData);\r\n    let bodyData = result.data.rows\r\n    let searchingBody = []\r\n    bodyData.forEach(function (row, index) {\r\n      for (let item in row) {\r\n        if (row[item].includes(keyString)) {\r\n          searchingBody.push(row)\r\n          break\r\n        }\r\n      }\r\n    });\r\n    setCsvData(searchingBody)\r\n    setDatatable({\r\n      columns: tableHeader,\r\n      rows: searchingBody\r\n    })\r\n\r\n  }\r\n\r\n  const filterTableData = (filterData) => {\r\n    let filterItems = []\r\n    filterData.forEach(function (itemTree, index) {\r\n      if (itemTree.default) {\r\n        itemTree.children.forEach(function (item, index) {\r\n          filterItems.push(item.label)\r\n        });\r\n      }\r\n    });\r\n    return filterItems\r\n  }\r\n\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: [],\r\n    rows: []\r\n  })\r\n\r\n\r\n  const hearder_columns = (headerData) => {\r\n    let table_header = []\r\n    headerData.map(item => {\r\n      if (item == 'Avg # Bars In Losing Trades: All') {\r\n        table_header.push({\r\n          label: 'Avg # Bars In Losing Trades: All',\r\n          field: 'Avg # Bars In Losing Trades: All',\r\n          width: 300,\r\n          attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'Avg # Bars In Losing Trades: All',\r\n          }\r\n        })\r\n      } else {\r\n        table_header.push({\r\n          label: item,\r\n          field: item,\r\n          width: 300,\r\n        })\r\n      }\r\n    })\r\n\r\n    return table_header\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getScannerAvailableFields = async () => {\r\n      setSelectedColumns(defaultFields)\r\n    }\r\n\r\n    console.log(defaultFields)\r\n\r\n    if (isLoadedWatchListOptions) {\r\n      getScannerAvailableFields()\r\n    }\r\n\r\n  }, [isLoadedWatchListOptions])\r\n\r\n\r\n  const handleColumnSet = (columns) => {\r\n    let cols = []\r\n    let temps = []\r\n    let colObjects = []\r\n    Object.keys(columns).forEach((key) => {\r\n      columns[key].children.forEach((col) => {\r\n        cols.push(col.label)\r\n        temps.push(col.label)\r\n      })\r\n\r\n      colObjects.push({\r\n        [columns[key].label]: temps\r\n      })\r\n      temps = []\r\n    })\r\n    setIsUpdatedCols(!isUpdatedCols)\r\n    setColumnItems(cols)\r\n    setSelectedColumns(columns)\r\n    loadTableData(cols)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"watch-list-item-container\">\r\n      <Modal show={isOpenedEditColumnWidget} className=\"hunter-widget-modal\" onHide={() => handleModalClose()}>\r\n        <WatchListEditColumnWidget\r\n          handleModalClose={handleModalClose}\r\n          setColumns={handleColumnSet}\r\n          selectedColumns={selectedColumns}\r\n        />\r\n      </Modal>\r\n      <div className=\"watch-list-item-wrap hunter-watch-list-item-wrap\">\r\n        <div className=\"watch-list-item-header\">\r\n          <Input placeholder=\"Search..\" onChange={(event) => setSearchKey(event.target.value)} />\r\n          <Button\r\n            className=\"\"\r\n            onClick={() => { handleSearching() }}\r\n          >\r\n            <i class=\"fa fa-search\"></i>\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"\"\r\n            onClick={() => { handleColumnsChange() }}\r\n          >\r\n            change columns\r\n          </Button>\r\n\r\n        </div>\r\n        <div className={\"d-flex align-items-center\"}>\r\n          <CSVLink data={csvData} filename=\"search_result.csv\" className={\"btn btn-primary py-2 my-0 hunter-csv-download-button\"}>Csv Download</CSVLink>\r\n        </div>\r\n        <div>\r\n          <MDBDataTableV5 hover entriesOptions={[10, 15, 20, 25, 30]} entries={10} pagesAmount={4} data={datatable} fullPagination />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WatchListItem;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\nimport WatchListItem from 'components/WatchListItem/WatchListItem'\r\nimport {\r\n  saveScannerAllViewData, getScannerAllViewData, getStockModalData\r\n} from 'api/Api';\r\n\r\nconst WatchList = (props) => {\r\n\r\n  const auth = useAuth();\r\n  const { selectedInstance } = props\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [chartColumn, setChartColumn] = useState({ value: 1, label: '1' })\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n\r\n  const defaultViewFields = [\r\n    {\r\n      label: \"Indicators\",\r\n      value: \"parent_value_2\",\r\n      children: [\r\n          {\r\n              label: \"rsi\",\r\n              value: \"child_value_2_1\",\r\n              default: true\r\n          },\r\n          {\r\n              label: \"rsi2\",\r\n              value: \"child_value_2_2\",\r\n              default: true\r\n          },\r\n          {\r\n              label: \"rsi3\",\r\n              value: \"child_value_2_3\",\r\n              default: false\r\n          },\r\n          {\r\n              label: \"heik\",\r\n              value: \"child_value_2_4\",\r\n              default: false\r\n          },\r\n          {\r\n              label: \"heik2\",\r\n              value: \"child_value_2_5\",\r\n              default: false\r\n          }\r\n      ],\r\n      \"default\": true\r\n    }\r\n  ];\r\n\r\n  const allViewDataDefault = [\r\n    {\r\n      \"chart_number\": 1,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 2,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 3,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 4,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 5,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 6,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    }\r\n  ];\r\n\r\n  const [allViewData, setAllViewData] = useState(allViewDataDefault);\r\n\r\n  const loadLayout = async () => {\r\n    const result = await getScannerAllViewData();\r\n    if (!result.success || result.data == undefined) return;\r\n\r\n    const validViewDatas = result.data.filter(d => d.fields);\r\n    const chartNumbers = validViewDatas.map(d => d.chart_number);\r\n    const allViewDataFiltered = allViewData.filter(d => !chartNumbers.includes(d.chart_number));\r\n    const newAllViewData = [...allViewDataFiltered, ...validViewDatas];\r\n\r\n    setAllViewData(newAllViewData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    loadLayout()\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [])\r\n  \r\n  const handleChartsColumnChange = (option) => {\r\n    setChartColumn(option)\r\n  }\r\n\r\n  const calculateHeightStyle = () => {\r\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\r\n      return 'full-height'\r\n    }\r\n    return 'half-height'\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    if (chartColumn.value === 1) {\r\n      return 12\r\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\r\n      return 6\r\n    }\r\n    return 4\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/search_engine\" className=\"hunter-navbar-brand\">\r\n            Search Engine\r\n          </a>\r\n        </div>\r\n        {(user.is_admin || (user.role?.length)) && (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/search_engine\"} className=\"nav-link\"></Link>\r\n            </li>\r\n          </div>\r\n        )}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>    \r\n      </nav>\r\n      {!user.is_admin && !user?.role.length\r\n        ? (<div className=\"development-in-content dark\">\r\n            No Permission\r\n          </div>)\r\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization' \r\n        ? (<div className=\"development-in-content dark\">\r\n          In development\r\n        </div>)\r\n        : (<div className=\"graphs-container dark\">\r\n          <WatchListItem \r\n            chart_number={1}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchList;","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport WatchList from \"components/WatchList\"\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction MarketWatch() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('search_engine');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-watch-list-area\">\r\n                <WatchList />\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default MarketWatch;","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { apiGetDatabases, apiDeleteDatabase, apiCreateBackup, apiExecuteBackup, apiStopBackup } from \"api/Api\"\r\n\r\nexport const DBDashboardContext = React.createContext()\r\nexport const DBDashboardUpdateContext = React.createContext()\r\nexport const DBDashboardLoadingContext = React.createContext()\r\nexport const DBDatabaseExportContext = React.createContext()\r\nexport const DBDatabaseDeleteContext = React.createContext()\r\nexport const DBBackupContext = React.createContext()\r\n\r\n\r\nexport function useBackupStatus() {\r\n  return useContext(DBBackupContext)\r\n}\r\n\r\nexport function useDBDashboard() {\r\n  return useContext(DBDashboardContext)\r\n}\r\n\r\nexport function useDBDashboardUpdate() {\r\n  return useContext(DBDashboardUpdateContext)\r\n}\r\n\r\nexport function useDBDashboardLoading() {\r\n  return useContext(DBDashboardLoadingContext)\r\n}\r\n\r\nexport const useActiveDatabase = () => {\r\n  const {hash} = useLocation()\r\n  const activeDatabase = hash.substring(1)\r\n\r\n  return activeDatabase\r\n}\r\n\r\nexport const useExportDatabase = () => {\r\n  return useContext(DBDatabaseExportContext)\r\n}\r\n\r\nexport const useDeleteDatabase = () => {\r\n  return useContext(DBDatabaseDeleteContext)\r\n}\r\n\r\nexport function DBDashboardProvider({children}) {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [databases, setDatabases] = useState([])\r\n  const [isBackupRunning, setBackupRunning] = useState(false)\r\n  const [currentBackupId, setCurrentBackupId] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    apiGetDatabases().then((response) => {\r\n      setDatabases(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [setDatabases])\r\n\r\n  const history = useHistory()\r\n\r\n  const updateDatabases = function(data) {\r\n    setDatabases(data)\r\n  }\r\n\r\n  const deleteDatabase = (databaseName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the database \"${databaseName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteDatabase(databaseName).then((response) => {\r\n        const updatedDatabases = databases.filter((filteredDatabase) => {\r\n          return filteredDatabase != databaseName\r\n        });\r\n        setDatabases(updatedDatabases)\r\n        history.push('/db_management')\r\n      })\r\n    }\r\n  }\r\n\r\n  const exportDatabase = (databaseName, collectionName='') => {\r\n    setBackupRunning(true)\r\n    apiCreateBackup(databaseName, collectionName)\r\n      .then(data => {\r\n        setCurrentBackupId(data.id)\r\n\r\n        // execute backup\r\n        apiExecuteBackup(data).then(data => {\r\n          setBackupRunning(false)\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  const stopExportDatabase = () => {\r\n    setBackupRunning(false)\r\n    if (currentBackupId) {\r\n      apiStopBackup({'id':currentBackupId}).then(data => {\r\n        setBackupRunning(false)\r\n        setCurrentBackupId(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DBDashboardLoadingContext.Provider value={isLoading}>\r\n      <DBBackupContext.Provider value={isBackupRunning}>\r\n        <DBDashboardContext.Provider value={databases}>\r\n          <DBDashboardUpdateContext.Provider value={updateDatabases}>\r\n            <DBDatabaseExportContext.Provider value={[exportDatabase, stopExportDatabase]}>\r\n              <DBDatabaseDeleteContext.Provider value={deleteDatabase}>\r\n                {children}\r\n              </DBDatabaseDeleteContext.Provider>\r\n            </DBDatabaseExportContext.Provider>\r\n          </DBDashboardUpdateContext.Provider>\r\n        </DBDashboardContext.Provider>\r\n      </DBBackupContext.Provider>\r\n    </DBDashboardLoadingContext.Provider>\r\n  )\r\n}","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBCollection(props) {\r\n  const colors = useThemeColors()\r\n  const dbName = props.dbname\r\n  const collectionName = props.name\r\n\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  const isBackupRunning = useBackupStatus()\r\n  const [handleBackup, ] = useExportDatabase()\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex align-items-center\">\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); handleBackup(dbName, collectionName); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n            {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm text-primary\" role=\"status\" aria-hidden=\"true\"></span>}\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBCollection;","import React from \"react\";\r\n\r\nconst Spinner = (props) => {\r\n  // props.color: primary,success,danger,warning,info\r\n  const color = props.color?props.color:'primary'\r\n\r\n  return (\r\n    <>\r\n      <div className={\"spinner-border text-\" + color} role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { apiGetCollections, apiDeleteCollection } from \"api/Api\"\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\nimport DBCollection from './Collection';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBCollectionList() {\r\n  const [collections, setCollections] = useState([])\r\n  const dbName = useActiveDatabase()\r\n\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setCollections([])\r\n    apiGetCollections(dbName).then((response) => {\r\n      setCollections(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [useActiveDatabase()])\r\n\r\n  const deleteCollection = (collectionName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the collection \"${collectionName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteCollection(dbName, collectionName).then((response) => {\r\n        const updatedCollections = collections.filter((filteredCollection) => {\r\n          return filteredCollection != collectionName\r\n        });\r\n        setCollections(updatedCollections)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  let index = 1\r\n\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Collection Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {collections && collections.map((collectionName) => {\r\n            return (\r\n              <DBCollection index={index++} key={collectionName} dbname={dbName} name={collectionName}\r\n                onDeleteClick={() => deleteCollection(collectionName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBCollectionList","import { MDBBtn, MDBIcon } from 'mdbreact'\r\nimport React from 'react'\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\nimport { useActiveDatabase, useBackupStatus, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nexport default function DBDatabaseActions() {\r\n  const dbName = useActiveDatabase()\r\n  const colors = useThemeColors()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const [handleBackup, ] = useExportDatabase()\r\n  const isBackupRunning = useBackupStatus()\r\n\r\n  return (\r\n    <>\r\n      {dbName &&\r\n      <div class=\"d-flex\">\r\n        <MDBBtn color=\"white\" onClick={(e) => {e.preventDefault(); handleDelete(dbName); }}><MDBIcon icon=\"trash\" style={{color: colors.white}} /></MDBBtn>\r\n        <MDBBtn disabled={isBackupRunning} className=\"d-flex flex-nowrap align-items-center\" color=\"primary\" onClick={(e) => {e.preventDefault(); handleBackup(dbName); }}>\r\n          <MDBIcon icon=\"file-export\" style={{color: colors.white}} /> <span class=\"ml-1\">Backup</span>\r\n          {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\r\n        </MDBBtn>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n","import { MDBBox, MDBBreadcrumb, MDBBreadcrumbItem, MDBLink } from 'mdbreact';\r\nimport React from 'react';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBPathway(props) {\r\n  const dbName = useActiveDatabase()\r\n  return (\r\n    <>\r\n      <MDBBreadcrumb style={{backgroundColor: 'transparent'}} className=\"mb-0\">\r\n        <MDBBreadcrumbItem>\r\n            Databases\r\n        </MDBBreadcrumbItem>\r\n        <MDBBreadcrumbItem active>\r\n            {dbName}\r\n        </MDBBreadcrumbItem>\r\n      </MDBBreadcrumb>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBPathway;","import { MDBBox, MDBContainer } from 'mdbreact';\r\nimport DBDatabaseActions from './DatabaseActions';\r\nimport DBPathway from './Pathway';\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\n\r\nfunction DBControlBar(props) {\r\n  const colors = useThemeColors()\r\n  return (\r\n    <MDBBox class=\"d-flex justify-content-between align-items-center\" style={{backgroundColor: colors.darkBlue}}>\r\n      <DBPathway />\r\n      <DBDatabaseActions />\r\n    </MDBBox>\r\n  );\r\n}\r\n\r\nexport default DBControlBar;","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\n\r\nfunction DBDatabase(props) {\r\n  const colors = useThemeColors()\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex\">\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onSaveClick(); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDatabase","import React, { useEffect, useState } from 'react';\r\nimport { useDBDashboardLoading, useDBDashboard, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport DBDatabase from './Database';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBDatabaseList() {\r\n  const databases = useDBDashboard()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const handleBackup = useExportDatabase()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  let index = 1\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Database Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {databases && databases.map((databaseName) => {\r\n            return (\r\n              <DBDatabase index={index++} key={databaseName} name={databaseName}\r\n                onDeleteClick={() => handleDelete(databaseName)}\r\n                onSaveClick={() => handleBackup(databaseName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBDatabaseList","import { MDBCard, MDBCardBody, MDBCardHeader, MDBNav, MDBNavItem } from 'mdbreact';\r\nimport React from 'react';\r\nimport DBCollectionList from 'components/DBManagement/CollectionList'\r\nimport {useThemeColors } from 'contexts/ThemeContext'\r\nimport DBControlBar from './ControlBar';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext';\r\nimport DBDatabaseList from './DatabaseList';\r\n\r\nfunction DBContent(props) {\r\n  const colors = useThemeColors()\r\n  const currentDb = useActiveDatabase()\r\n  console.log('currentDb')\r\n  console.log(currentDb)\r\n  console.log(colors)\r\n  return (\r\n    <>\r\n      <DBControlBar />\r\n      <MDBCard style={{backgroundColor: colors.lightBlue}}>\r\n        <MDBCardBody style={{ overflowY: 'auto' }}>\r\n          {currentDb && <DBCollectionList />}\r\n          {!currentDb && <DBDatabaseList />}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBContent;","import { MDBSpinner, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\"\r\nimport { useActiveDatabase, useDBDashboard, useDBDashboardLoading } from \"contexts/DBDashboardContext\"\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst DBSidebar = () => {\r\n  const activeDatabase = useActiveDatabase()\r\n  const databases = useDBDashboard()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  return (\r\n    <>\r\n      <MDBCard style={{backgroundColor: '#343a40'}}>\r\n        <MDBCardHeader>DATABASES</MDBCardHeader>\r\n        <MDBCardBody style={{ overflowY: 'auto'}}>\r\n          <MDBNav>\r\n            <MDBNavItem>\r\n              {isLoading && <Spinner color=\"info\" />}\r\n              {databases && databases.map(name => {\r\n                return (\r\n                  <MDBNavLink key={name} disabled={name === activeDatabase} to={'#'+name} style={(name===activeDatabase)?{color: 'lightgray'}:{color: 'white'}}>\r\n                    <MDBIcon icon=\"database\" />{\" \"}{name}\r\n                  </MDBNavLink>\r\n                )\r\n              })}\r\n            </MDBNavItem>\r\n          </MDBNav>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBSidebar","import DBContent from \"./Content\"\r\nimport DBSidebar from \"./Sidebar\"\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport Spinner from 'components/Spinner'\r\nimport { MDBBtn } from 'mdbreact'\r\n\r\nconst { MDBContainer, MDBRow, MDBCol } = require(\"mdbreact\")\r\n\r\n\r\nconst DBDashboard = () => {\r\n  const isBackupRunning = useBackupStatus()\r\n  const [, stopBackup] = useExportDatabase()\r\n  console.log('isBackupRunning')\r\n  console.log(isBackupRunning)\r\n\r\n  const colors = useThemeColors()\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer fluid={true}>\r\n        <MDBRow>\r\n          <MDBCol><div className=\"hunter-data-table-title\">DB Management</div></MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol size=\"3\"><DBSidebar /></MDBCol>\r\n          <MDBCol><DBContent /></MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n\r\n      {isBackupRunning &&\r\n        (<div className=\"d-flex position-fixed align-items-center justify-content-center\" style={{\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            background: 'rgba(0,0,0,0.9)',\r\n            zIndex: 9999,\r\n          }}>\r\n            <div class=\"d-flex flex-column align-items-center justify-content-center px-5 py-3 pt-5 rounded rounded-5\" style={{background: colors.white}}>\r\n              <div className=\"mb-5\"><Spinner>Loading</Spinner><span class=\"ml-2\" style={{color: colors.darkBlue}}>Processing...</span></div>\r\n              <MDBBtn color=\"red\" onClick={(e) => {e.preventDefault(); stopBackup(); }}>Stop</MDBBtn>\r\n            </div>\r\n        </div>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDashboard","import React, { useState, useEffect } from 'react'\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport { routes } from \"routes.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\nimport DBDashboard from \"components/DBManagement/Dashboard\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DBDashboardProvider } from 'contexts/DBDashboardContext'\r\n\r\nconst DashboardWrapper = () => {\r\n  const history = useHistory();\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('admin_tab');\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  useEffect (() => {\r\n    console.log('user.is_admin???', user.is_admin)\r\n    if (!user.is_admin) {\r\n      history.pushState('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  return (\r\n    <DBDashboardProvider>\r\n      <React.Fragment>\r\n        <AdminNavbar nav=\"true\"/>\r\n        <div className=\"dashboard-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'systemfilemanager'}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-data-table-container\">\r\n              <DBDashboard></DBDashboard>\r\n            </div>\r\n        </div>\r\n      </React.Fragment>\r\n    </DBDashboardProvider>\r\n  )\r\n}\r\n\r\nexport default DashboardWrapper","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// import HomePage from \"layouts/User/HomePage\"\r\nimport Login from \"layouts/User/Login\"\r\n// import AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport UserManage from \"layouts/Admin/UserManage.js\";\r\nimport LinkManage from \"layouts/Admin/LinkManage\";\r\n// import PriceData from \"layouts/User/PriceData\";\r\n// import TradeData from \"layouts/User/TradeData\";\r\n// import HybridView from \"layouts/User/HybridView\";\r\n// import FinancialDashboard from \"layouts/User/FinancialDashboard\";\r\n// import NewsDashboard from \"layouts/User/NewsDashboard\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport \"./App.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\n\r\n// import FileManager from \"components/SystemFileManager/FileManager\";\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\nimport ProvideAuth from 'contexts/authContext'\r\nimport PrivateRoute from 'layouts/Auth/PrivateRoute'\r\nimport SignUp from 'layouts/User/SignUp'\r\nimport Verify from 'layouts/User/Verify'\r\n// import Floats from \"layouts/User/Floats\";\r\nimport ForgotPassword from 'layouts/User/ForgotPassword'\r\nimport PasswordResetConfirm from 'layouts/User/PasswordResetConfirm'\r\nimport MarketWatch from 'layouts/User/MarketWatch'\r\n// import Scanner from 'layouts/User/Scanner'\r\n// import Optimization from 'layouts/User/Optimization'\r\nimport DBManagementDashboardWrapper from './components/DBManagement/DashboardWrapper'\r\n// import { DatatableProvider } from \"contexts/DatatableContext\";\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <PrivateRoute path=\"/admin/usermanage\">\r\n              <UserManage />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin/linkmanage\">\r\n              <LinkManage />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin\">\r\n              <UserManage />\r\n            </PrivateRoute>\r\n            <Route path=\"/login\" render={(props) => <Login {...props} />} />\r\n            <Route path=\"/signup\" render={(props) => <SignUp {...props} />} />\r\n            <Route path=\"/verify\" render={(props) => <Verify {...props} />} />\r\n            <Route path=\"/forgot_password\" render={(props) => <ForgotPassword {...props} />} />\r\n            <Route path=\"/password-reset-confirm/:uuid/:token\" render={(props) => <PasswordResetConfirm {...props} />} />\r\n            {/* <PrivateRoute path=\"/botmanagement\">\r\n              <FileManager/>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/floats\">\r\n              <DatatableProvider>\r\n                <Floats />\r\n              </DatatableProvider>\r\n            </PrivateRoute> */}\r\n            <PrivateRoute path=\"/search_engine\">\r\n              <MarketWatch />\r\n            </PrivateRoute>\r\n            {/* <PrivateRoute path=\"/optimization\">\r\n              <Optimization />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/pricedatatable\">\r\n              <PriceData />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/tradedatatable\">\r\n              <DatatableProvider>\r\n                <TradeData />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/hybrid_view\">\r\n              <HybridView />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/financial_data\">\r\n              <DatatableProvider>\r\n                <FinancialDashboard />\r\n              </DatatableProvider>\r\n            </PrivateRoute> */}\r\n            {/* <PrivateRoute path=\"/news_data\">\r\n              <DatatableProvider>\r\n                <NewsDashboard />\r\n              </DatatableProvider>\r\n            </PrivateRoute> */}\r\n            {/* <PrivateRoute path=\"/scanner\">\r\n              <DatatableProvider>\r\n                <Scanner />\r\n              </DatatableProvider>\r\n            </PrivateRoute>}*/}\r\n            <PrivateRoute path=\"/db_management\">\r\n              <DBManagementDashboardWrapper />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/\">\r\n              <MarketWatch />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";"],"sourceRoot":""}